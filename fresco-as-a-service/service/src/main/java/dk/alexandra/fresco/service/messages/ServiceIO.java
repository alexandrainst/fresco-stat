// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServiceIO.proto

package dk.alexandra.fresco.service.messages;

public final class ServiceIO {
  private ServiceIO() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ServiceInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.ServiceInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string description = 1;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <code>string description = 1;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
     * @return Whether the linearRegressionInput field is set.
     */
    boolean hasLinearRegressionInput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
     * @return The linearRegressionInput.
     */
    dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput getLinearRegressionInput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
     */
    dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInputOrBuilder getLinearRegressionInputOrBuilder();

    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
     * @return Whether the tTestInput field is set.
     */
    boolean hasTTestInput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
     * @return The tTestInput.
     */
    dk.alexandra.fresco.service.messages.TTest.TTestInput getTTestInput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
     */
    dk.alexandra.fresco.service.messages.TTest.TTestInputOrBuilder getTTestInputOrBuilder();

    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
     * @return Whether the neuralNetworkInput field is set.
     */
    boolean hasNeuralNetworkInput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
     * @return The neuralNetworkInput.
     */
    dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput getNeuralNetworkInput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
     */
    dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInputOrBuilder getNeuralNetworkInputOrBuilder();

    public dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput.InputCase getInputCase();
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.ServiceInput}
   */
  public static final class ServiceInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.ServiceInput)
      ServiceInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServiceInput.newBuilder() to construct.
    private ServiceInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServiceInput() {
      description_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ServiceInput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ServiceInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 82: {
              dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.Builder subBuilder = null;
              if (inputCase_ == 10) {
                subBuilder = ((dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_).toBuilder();
              }
              input_ =
                  input.readMessage(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_);
                input_ = subBuilder.buildPartial();
              }
              inputCase_ = 10;
              break;
            }
            case 162: {
              dk.alexandra.fresco.service.messages.TTest.TTestInput.Builder subBuilder = null;
              if (inputCase_ == 20) {
                subBuilder = ((dk.alexandra.fresco.service.messages.TTest.TTestInput) input_).toBuilder();
              }
              input_ =
                  input.readMessage(dk.alexandra.fresco.service.messages.TTest.TTestInput.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((dk.alexandra.fresco.service.messages.TTest.TTestInput) input_);
                input_ = subBuilder.buildPartial();
              }
              inputCase_ = 20;
              break;
            }
            case 242: {
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.Builder subBuilder = null;
              if (inputCase_ == 30) {
                subBuilder = ((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_).toBuilder();
              }
              input_ =
                  input.readMessage(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_);
                input_ = subBuilder.buildPartial();
              }
              inputCase_ = 30;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceInput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput.class, dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput.Builder.class);
    }

    private int inputCase_ = 0;
    private java.lang.Object input_;
    public enum InputCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      LINEARREGRESSIONINPUT(10),
      TTESTINPUT(20),
      NEURALNETWORKINPUT(30),
      INPUT_NOT_SET(0);
      private final int value;
      private InputCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static InputCase valueOf(int value) {
        return forNumber(value);
      }

      public static InputCase forNumber(int value) {
        switch (value) {
          case 10: return LINEARREGRESSIONINPUT;
          case 20: return TTESTINPUT;
          case 30: return NEURALNETWORKINPUT;
          case 0: return INPUT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public InputCase
    getInputCase() {
      return InputCase.forNumber(
          inputCase_);
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    private volatile java.lang.Object description_;
    /**
     * <code>string description = 1;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <code>string description = 1;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINEARREGRESSIONINPUT_FIELD_NUMBER = 10;
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
     * @return Whether the linearRegressionInput field is set.
     */
    @java.lang.Override
    public boolean hasLinearRegressionInput() {
      return inputCase_ == 10;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
     * @return The linearRegressionInput.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput getLinearRegressionInput() {
      if (inputCase_ == 10) {
         return (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_;
      }
      return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.getDefaultInstance();
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInputOrBuilder getLinearRegressionInputOrBuilder() {
      if (inputCase_ == 10) {
         return (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_;
      }
      return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.getDefaultInstance();
    }

    public static final int TTESTINPUT_FIELD_NUMBER = 20;
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
     * @return Whether the tTestInput field is set.
     */
    @java.lang.Override
    public boolean hasTTestInput() {
      return inputCase_ == 20;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
     * @return The tTestInput.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.TTest.TTestInput getTTestInput() {
      if (inputCase_ == 20) {
         return (dk.alexandra.fresco.service.messages.TTest.TTestInput) input_;
      }
      return dk.alexandra.fresco.service.messages.TTest.TTestInput.getDefaultInstance();
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.TTest.TTestInputOrBuilder getTTestInputOrBuilder() {
      if (inputCase_ == 20) {
         return (dk.alexandra.fresco.service.messages.TTest.TTestInput) input_;
      }
      return dk.alexandra.fresco.service.messages.TTest.TTestInput.getDefaultInstance();
    }

    public static final int NEURALNETWORKINPUT_FIELD_NUMBER = 30;
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
     * @return Whether the neuralNetworkInput field is set.
     */
    @java.lang.Override
    public boolean hasNeuralNetworkInput() {
      return inputCase_ == 30;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
     * @return The neuralNetworkInput.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput getNeuralNetworkInput() {
      if (inputCase_ == 30) {
         return (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_;
      }
      return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.getDefaultInstance();
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInputOrBuilder getNeuralNetworkInputOrBuilder() {
      if (inputCase_ == 30) {
         return (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_;
      }
      return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, description_);
      }
      if (inputCase_ == 10) {
        output.writeMessage(10, (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_);
      }
      if (inputCase_ == 20) {
        output.writeMessage(20, (dk.alexandra.fresco.service.messages.TTest.TTestInput) input_);
      }
      if (inputCase_ == 30) {
        output.writeMessage(30, (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, description_);
      }
      if (inputCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_);
      }
      if (inputCase_ == 20) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, (dk.alexandra.fresco.service.messages.TTest.TTestInput) input_);
      }
      if (inputCase_ == 30) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput other = (dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput) obj;

      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getInputCase().equals(other.getInputCase())) return false;
      switch (inputCase_) {
        case 10:
          if (!getLinearRegressionInput()
              .equals(other.getLinearRegressionInput())) return false;
          break;
        case 20:
          if (!getTTestInput()
              .equals(other.getTTestInput())) return false;
          break;
        case 30:
          if (!getNeuralNetworkInput()
              .equals(other.getNeuralNetworkInput())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      switch (inputCase_) {
        case 10:
          hash = (37 * hash) + LINEARREGRESSIONINPUT_FIELD_NUMBER;
          hash = (53 * hash) + getLinearRegressionInput().hashCode();
          break;
        case 20:
          hash = (37 * hash) + TTESTINPUT_FIELD_NUMBER;
          hash = (53 * hash) + getTTestInput().hashCode();
          break;
        case 30:
          hash = (37 * hash) + NEURALNETWORKINPUT_FIELD_NUMBER;
          hash = (53 * hash) + getNeuralNetworkInput().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.ServiceInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.ServiceInput)
        dk.alexandra.fresco.service.messages.ServiceIO.ServiceInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceInput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput.class, dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        description_ = "";

        inputCase_ = 0;
        input_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceInput_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput build() {
        dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput buildPartial() {
        dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput result = new dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput(this);
        result.description_ = description_;
        if (inputCase_ == 10) {
          if (linearRegressionInputBuilder_ == null) {
            result.input_ = input_;
          } else {
            result.input_ = linearRegressionInputBuilder_.build();
          }
        }
        if (inputCase_ == 20) {
          if (tTestInputBuilder_ == null) {
            result.input_ = input_;
          } else {
            result.input_ = tTestInputBuilder_.build();
          }
        }
        if (inputCase_ == 30) {
          if (neuralNetworkInputBuilder_ == null) {
            result.input_ = input_;
          } else {
            result.input_ = neuralNetworkInputBuilder_.build();
          }
        }
        result.inputCase_ = inputCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput) {
          return mergeFrom((dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput other) {
        if (other == dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput.getDefaultInstance()) return this;
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        switch (other.getInputCase()) {
          case LINEARREGRESSIONINPUT: {
            mergeLinearRegressionInput(other.getLinearRegressionInput());
            break;
          }
          case TTESTINPUT: {
            mergeTTestInput(other.getTTestInput());
            break;
          }
          case NEURALNETWORKINPUT: {
            mergeNeuralNetworkInput(other.getNeuralNetworkInput());
            break;
          }
          case INPUT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int inputCase_ = 0;
      private java.lang.Object input_;
      public InputCase
          getInputCase() {
        return InputCase.forNumber(
            inputCase_);
      }

      public Builder clearInput() {
        inputCase_ = 0;
        input_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object description_ = "";
      /**
       * <code>string description = 1;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string description = 1;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string description = 1;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string description = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string description = 1;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.Builder, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInputOrBuilder> linearRegressionInputBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
       * @return Whether the linearRegressionInput field is set.
       */
      @java.lang.Override
      public boolean hasLinearRegressionInput() {
        return inputCase_ == 10;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
       * @return The linearRegressionInput.
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput getLinearRegressionInput() {
        if (linearRegressionInputBuilder_ == null) {
          if (inputCase_ == 10) {
            return (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_;
          }
          return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.getDefaultInstance();
        } else {
          if (inputCase_ == 10) {
            return linearRegressionInputBuilder_.getMessage();
          }
          return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
       */
      public Builder setLinearRegressionInput(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput value) {
        if (linearRegressionInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          input_ = value;
          onChanged();
        } else {
          linearRegressionInputBuilder_.setMessage(value);
        }
        inputCase_ = 10;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
       */
      public Builder setLinearRegressionInput(
          dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.Builder builderForValue) {
        if (linearRegressionInputBuilder_ == null) {
          input_ = builderForValue.build();
          onChanged();
        } else {
          linearRegressionInputBuilder_.setMessage(builderForValue.build());
        }
        inputCase_ = 10;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
       */
      public Builder mergeLinearRegressionInput(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput value) {
        if (linearRegressionInputBuilder_ == null) {
          if (inputCase_ == 10 &&
              input_ != dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.getDefaultInstance()) {
            input_ = dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.newBuilder((dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_)
                .mergeFrom(value).buildPartial();
          } else {
            input_ = value;
          }
          onChanged();
        } else {
          if (inputCase_ == 10) {
            linearRegressionInputBuilder_.mergeFrom(value);
          }
          linearRegressionInputBuilder_.setMessage(value);
        }
        inputCase_ = 10;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
       */
      public Builder clearLinearRegressionInput() {
        if (linearRegressionInputBuilder_ == null) {
          if (inputCase_ == 10) {
            inputCase_ = 0;
            input_ = null;
            onChanged();
          }
        } else {
          if (inputCase_ == 10) {
            inputCase_ = 0;
            input_ = null;
          }
          linearRegressionInputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
       */
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.Builder getLinearRegressionInputBuilder() {
        return getLinearRegressionInputFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInputOrBuilder getLinearRegressionInputOrBuilder() {
        if ((inputCase_ == 10) && (linearRegressionInputBuilder_ != null)) {
          return linearRegressionInputBuilder_.getMessageOrBuilder();
        } else {
          if (inputCase_ == 10) {
            return (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_;
          }
          return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionInput linearRegressionInput = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.Builder, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInputOrBuilder> 
          getLinearRegressionInputFieldBuilder() {
        if (linearRegressionInputBuilder_ == null) {
          if (!(inputCase_ == 10)) {
            input_ = dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.getDefaultInstance();
          }
          linearRegressionInputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.Builder, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInputOrBuilder>(
                  (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) input_,
                  getParentForChildren(),
                  isClean());
          input_ = null;
        }
        inputCase_ = 10;
        onChanged();;
        return linearRegressionInputBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.TTest.TTestInput, dk.alexandra.fresco.service.messages.TTest.TTestInput.Builder, dk.alexandra.fresco.service.messages.TTest.TTestInputOrBuilder> tTestInputBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
       * @return Whether the tTestInput field is set.
       */
      @java.lang.Override
      public boolean hasTTestInput() {
        return inputCase_ == 20;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
       * @return The tTestInput.
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.TTest.TTestInput getTTestInput() {
        if (tTestInputBuilder_ == null) {
          if (inputCase_ == 20) {
            return (dk.alexandra.fresco.service.messages.TTest.TTestInput) input_;
          }
          return dk.alexandra.fresco.service.messages.TTest.TTestInput.getDefaultInstance();
        } else {
          if (inputCase_ == 20) {
            return tTestInputBuilder_.getMessage();
          }
          return dk.alexandra.fresco.service.messages.TTest.TTestInput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
       */
      public Builder setTTestInput(dk.alexandra.fresco.service.messages.TTest.TTestInput value) {
        if (tTestInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          input_ = value;
          onChanged();
        } else {
          tTestInputBuilder_.setMessage(value);
        }
        inputCase_ = 20;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
       */
      public Builder setTTestInput(
          dk.alexandra.fresco.service.messages.TTest.TTestInput.Builder builderForValue) {
        if (tTestInputBuilder_ == null) {
          input_ = builderForValue.build();
          onChanged();
        } else {
          tTestInputBuilder_.setMessage(builderForValue.build());
        }
        inputCase_ = 20;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
       */
      public Builder mergeTTestInput(dk.alexandra.fresco.service.messages.TTest.TTestInput value) {
        if (tTestInputBuilder_ == null) {
          if (inputCase_ == 20 &&
              input_ != dk.alexandra.fresco.service.messages.TTest.TTestInput.getDefaultInstance()) {
            input_ = dk.alexandra.fresco.service.messages.TTest.TTestInput.newBuilder((dk.alexandra.fresco.service.messages.TTest.TTestInput) input_)
                .mergeFrom(value).buildPartial();
          } else {
            input_ = value;
          }
          onChanged();
        } else {
          if (inputCase_ == 20) {
            tTestInputBuilder_.mergeFrom(value);
          }
          tTestInputBuilder_.setMessage(value);
        }
        inputCase_ = 20;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
       */
      public Builder clearTTestInput() {
        if (tTestInputBuilder_ == null) {
          if (inputCase_ == 20) {
            inputCase_ = 0;
            input_ = null;
            onChanged();
          }
        } else {
          if (inputCase_ == 20) {
            inputCase_ = 0;
            input_ = null;
          }
          tTestInputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
       */
      public dk.alexandra.fresco.service.messages.TTest.TTestInput.Builder getTTestInputBuilder() {
        return getTTestInputFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.TTest.TTestInputOrBuilder getTTestInputOrBuilder() {
        if ((inputCase_ == 20) && (tTestInputBuilder_ != null)) {
          return tTestInputBuilder_.getMessageOrBuilder();
        } else {
          if (inputCase_ == 20) {
            return (dk.alexandra.fresco.service.messages.TTest.TTestInput) input_;
          }
          return dk.alexandra.fresco.service.messages.TTest.TTestInput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestInput tTestInput = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.TTest.TTestInput, dk.alexandra.fresco.service.messages.TTest.TTestInput.Builder, dk.alexandra.fresco.service.messages.TTest.TTestInputOrBuilder> 
          getTTestInputFieldBuilder() {
        if (tTestInputBuilder_ == null) {
          if (!(inputCase_ == 20)) {
            input_ = dk.alexandra.fresco.service.messages.TTest.TTestInput.getDefaultInstance();
          }
          tTestInputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.TTest.TTestInput, dk.alexandra.fresco.service.messages.TTest.TTestInput.Builder, dk.alexandra.fresco.service.messages.TTest.TTestInputOrBuilder>(
                  (dk.alexandra.fresco.service.messages.TTest.TTestInput) input_,
                  getParentForChildren(),
                  isClean());
          input_ = null;
        }
        inputCase_ = 20;
        onChanged();;
        return tTestInputBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInputOrBuilder> neuralNetworkInputBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
       * @return Whether the neuralNetworkInput field is set.
       */
      @java.lang.Override
      public boolean hasNeuralNetworkInput() {
        return inputCase_ == 30;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
       * @return The neuralNetworkInput.
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput getNeuralNetworkInput() {
        if (neuralNetworkInputBuilder_ == null) {
          if (inputCase_ == 30) {
            return (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_;
          }
          return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.getDefaultInstance();
        } else {
          if (inputCase_ == 30) {
            return neuralNetworkInputBuilder_.getMessage();
          }
          return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
       */
      public Builder setNeuralNetworkInput(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput value) {
        if (neuralNetworkInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          input_ = value;
          onChanged();
        } else {
          neuralNetworkInputBuilder_.setMessage(value);
        }
        inputCase_ = 30;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
       */
      public Builder setNeuralNetworkInput(
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.Builder builderForValue) {
        if (neuralNetworkInputBuilder_ == null) {
          input_ = builderForValue.build();
          onChanged();
        } else {
          neuralNetworkInputBuilder_.setMessage(builderForValue.build());
        }
        inputCase_ = 30;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
       */
      public Builder mergeNeuralNetworkInput(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput value) {
        if (neuralNetworkInputBuilder_ == null) {
          if (inputCase_ == 30 &&
              input_ != dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.getDefaultInstance()) {
            input_ = dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.newBuilder((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_)
                .mergeFrom(value).buildPartial();
          } else {
            input_ = value;
          }
          onChanged();
        } else {
          if (inputCase_ == 30) {
            neuralNetworkInputBuilder_.mergeFrom(value);
          }
          neuralNetworkInputBuilder_.setMessage(value);
        }
        inputCase_ = 30;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
       */
      public Builder clearNeuralNetworkInput() {
        if (neuralNetworkInputBuilder_ == null) {
          if (inputCase_ == 30) {
            inputCase_ = 0;
            input_ = null;
            onChanged();
          }
        } else {
          if (inputCase_ == 30) {
            inputCase_ = 0;
            input_ = null;
          }
          neuralNetworkInputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
       */
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.Builder getNeuralNetworkInputBuilder() {
        return getNeuralNetworkInputFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInputOrBuilder getNeuralNetworkInputOrBuilder() {
        if ((inputCase_ == 30) && (neuralNetworkInputBuilder_ != null)) {
          return neuralNetworkInputBuilder_.getMessageOrBuilder();
        } else {
          if (inputCase_ == 30) {
            return (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_;
          }
          return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkInput neuralNetworkInput = 30;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInputOrBuilder> 
          getNeuralNetworkInputFieldBuilder() {
        if (neuralNetworkInputBuilder_ == null) {
          if (!(inputCase_ == 30)) {
            input_ = dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.getDefaultInstance();
          }
          neuralNetworkInputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInputOrBuilder>(
                  (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) input_,
                  getParentForChildren(),
                  isClean());
          input_ = null;
        }
        inputCase_ = 30;
        onChanged();;
        return neuralNetworkInputBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.ServiceInput)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.ServiceInput)
    private static final dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput();
    }

    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServiceInput>
        PARSER = new com.google.protobuf.AbstractParser<ServiceInput>() {
      @java.lang.Override
      public ServiceInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServiceInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ServiceInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServiceInput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.ServiceIO.ServiceInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServiceOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.ServiceOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
     * @return Whether the error field is set.
     */
    boolean hasError();
    /**
     * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
     * @return The error.
     */
    dk.alexandra.fresco.service.messages.ErrorOuterClass.Error getError();
    /**
     * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
     */
    dk.alexandra.fresco.service.messages.ErrorOuterClass.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
     * @return Whether the linearRegressionOutput field is set.
     */
    boolean hasLinearRegressionOutput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
     * @return The linearRegressionOutput.
     */
    dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput getLinearRegressionOutput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
     */
    dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutputOrBuilder getLinearRegressionOutputOrBuilder();

    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
     * @return Whether the tTestOutput field is set.
     */
    boolean hasTTestOutput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
     * @return The tTestOutput.
     */
    dk.alexandra.fresco.service.messages.TTest.TTestOutput getTTestOutput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
     */
    dk.alexandra.fresco.service.messages.TTest.TTestOutputOrBuilder getTTestOutputOrBuilder();

    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
     * @return Whether the neuralNetworkOutput field is set.
     */
    boolean hasNeuralNetworkOutput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
     * @return The neuralNetworkOutput.
     */
    dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput getNeuralNetworkOutput();
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
     */
    dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutputOrBuilder getNeuralNetworkOutputOrBuilder();

    public dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput.OutputCase getOutputCase();
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.ServiceOutput}
   */
  public static final class ServiceOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.ServiceOutput)
      ServiceOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServiceOutput.newBuilder() to construct.
    private ServiceOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServiceOutput() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ServiceOutput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ServiceOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 82: {
              dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.Builder subBuilder = null;
              if (outputCase_ == 10) {
                subBuilder = ((dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_).toBuilder();
              }
              output_ =
                  input.readMessage(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_);
                output_ = subBuilder.buildPartial();
              }
              outputCase_ = 10;
              break;
            }
            case 162: {
              dk.alexandra.fresco.service.messages.TTest.TTestOutput.Builder subBuilder = null;
              if (outputCase_ == 20) {
                subBuilder = ((dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_).toBuilder();
              }
              output_ =
                  input.readMessage(dk.alexandra.fresco.service.messages.TTest.TTestOutput.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_);
                output_ = subBuilder.buildPartial();
              }
              outputCase_ = 20;
              break;
            }
            case 242: {
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.Builder subBuilder = null;
              if (outputCase_ == 30) {
                subBuilder = ((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_).toBuilder();
              }
              output_ =
                  input.readMessage(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_);
                output_ = subBuilder.buildPartial();
              }
              outputCase_ = 30;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput.class, dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput.Builder.class);
    }

    private int bitField0_;
    private int outputCase_ = 0;
    private java.lang.Object output_;
    public enum OutputCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      LINEARREGRESSIONOUTPUT(10),
      TTESTOUTPUT(20),
      NEURALNETWORKOUTPUT(30),
      OUTPUT_NOT_SET(0);
      private final int value;
      private OutputCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OutputCase valueOf(int value) {
        return forNumber(value);
      }

      public static OutputCase forNumber(int value) {
        switch (value) {
          case 10: return LINEARREGRESSIONOUTPUT;
          case 20: return TTESTOUTPUT;
          case 30: return NEURALNETWORKOUTPUT;
          case 0: return OUTPUT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OutputCase
    getOutputCase() {
      return OutputCase.forNumber(
          outputCase_);
    }

    public static final int ERROR_FIELD_NUMBER = 1;
    private dk.alexandra.fresco.service.messages.ErrorOuterClass.Error error_;
    /**
     * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
     * @return Whether the error field is set.
     */
    @java.lang.Override
    public boolean hasError() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
     * @return The error.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.ErrorOuterClass.Error getError() {
      return error_ == null ? dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.ErrorOuterClass.ErrorOrBuilder getErrorOrBuilder() {
      return error_ == null ? dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.getDefaultInstance() : error_;
    }

    public static final int LINEARREGRESSIONOUTPUT_FIELD_NUMBER = 10;
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
     * @return Whether the linearRegressionOutput field is set.
     */
    @java.lang.Override
    public boolean hasLinearRegressionOutput() {
      return outputCase_ == 10;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
     * @return The linearRegressionOutput.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput getLinearRegressionOutput() {
      if (outputCase_ == 10) {
         return (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_;
      }
      return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.getDefaultInstance();
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutputOrBuilder getLinearRegressionOutputOrBuilder() {
      if (outputCase_ == 10) {
         return (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_;
      }
      return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.getDefaultInstance();
    }

    public static final int TTESTOUTPUT_FIELD_NUMBER = 20;
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
     * @return Whether the tTestOutput field is set.
     */
    @java.lang.Override
    public boolean hasTTestOutput() {
      return outputCase_ == 20;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
     * @return The tTestOutput.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.TTest.TTestOutput getTTestOutput() {
      if (outputCase_ == 20) {
         return (dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_;
      }
      return dk.alexandra.fresco.service.messages.TTest.TTestOutput.getDefaultInstance();
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.TTest.TTestOutputOrBuilder getTTestOutputOrBuilder() {
      if (outputCase_ == 20) {
         return (dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_;
      }
      return dk.alexandra.fresco.service.messages.TTest.TTestOutput.getDefaultInstance();
    }

    public static final int NEURALNETWORKOUTPUT_FIELD_NUMBER = 30;
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
     * @return Whether the neuralNetworkOutput field is set.
     */
    @java.lang.Override
    public boolean hasNeuralNetworkOutput() {
      return outputCase_ == 30;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
     * @return The neuralNetworkOutput.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput getNeuralNetworkOutput() {
      if (outputCase_ == 30) {
         return (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_;
      }
      return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.getDefaultInstance();
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutputOrBuilder getNeuralNetworkOutputOrBuilder() {
      if (outputCase_ == 30) {
         return (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_;
      }
      return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getError());
      }
      if (outputCase_ == 10) {
        output.writeMessage(10, (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_);
      }
      if (outputCase_ == 20) {
        output.writeMessage(20, (dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_);
      }
      if (outputCase_ == 30) {
        output.writeMessage(30, (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      if (outputCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_);
      }
      if (outputCase_ == 20) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, (dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_);
      }
      if (outputCase_ == 30) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput other = (dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput) obj;

      if (hasError() != other.hasError()) return false;
      if (hasError()) {
        if (!getError()
            .equals(other.getError())) return false;
      }
      if (!getOutputCase().equals(other.getOutputCase())) return false;
      switch (outputCase_) {
        case 10:
          if (!getLinearRegressionOutput()
              .equals(other.getLinearRegressionOutput())) return false;
          break;
        case 20:
          if (!getTTestOutput()
              .equals(other.getTTestOutput())) return false;
          break;
        case 30:
          if (!getNeuralNetworkOutput()
              .equals(other.getNeuralNetworkOutput())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasError()) {
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getError().hashCode();
      }
      switch (outputCase_) {
        case 10:
          hash = (37 * hash) + LINEARREGRESSIONOUTPUT_FIELD_NUMBER;
          hash = (53 * hash) + getLinearRegressionOutput().hashCode();
          break;
        case 20:
          hash = (37 * hash) + TTESTOUTPUT_FIELD_NUMBER;
          hash = (53 * hash) + getTTestOutput().hashCode();
          break;
        case 30:
          hash = (37 * hash) + NEURALNETWORKOUTPUT_FIELD_NUMBER;
          hash = (53 * hash) + getNeuralNetworkOutput().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.ServiceOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.ServiceOutput)
        dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput.class, dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getErrorFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          errorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        outputCase_ = 0;
        output_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.ServiceIO.internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput build() {
        dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput buildPartial() {
        dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput result = new dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (errorBuilder_ == null) {
            result.error_ = error_;
          } else {
            result.error_ = errorBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (outputCase_ == 10) {
          if (linearRegressionOutputBuilder_ == null) {
            result.output_ = output_;
          } else {
            result.output_ = linearRegressionOutputBuilder_.build();
          }
        }
        if (outputCase_ == 20) {
          if (tTestOutputBuilder_ == null) {
            result.output_ = output_;
          } else {
            result.output_ = tTestOutputBuilder_.build();
          }
        }
        if (outputCase_ == 30) {
          if (neuralNetworkOutputBuilder_ == null) {
            result.output_ = output_;
          } else {
            result.output_ = neuralNetworkOutputBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.outputCase_ = outputCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput) {
          return mergeFrom((dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput other) {
        if (other == dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        switch (other.getOutputCase()) {
          case LINEARREGRESSIONOUTPUT: {
            mergeLinearRegressionOutput(other.getLinearRegressionOutput());
            break;
          }
          case TTESTOUTPUT: {
            mergeTTestOutput(other.getTTestOutput());
            break;
          }
          case NEURALNETWORKOUTPUT: {
            mergeNeuralNetworkOutput(other.getNeuralNetworkOutput());
            break;
          }
          case OUTPUT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int outputCase_ = 0;
      private java.lang.Object output_;
      public OutputCase
          getOutputCase() {
        return OutputCase.forNumber(
            outputCase_);
      }

      public Builder clearOutput() {
        outputCase_ = 0;
        output_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private dk.alexandra.fresco.service.messages.ErrorOuterClass.Error error_;
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.ErrorOuterClass.Error, dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.Builder, dk.alexandra.fresco.service.messages.ErrorOuterClass.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
       * @return Whether the error field is set.
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
       * @return The error.
       */
      public dk.alexandra.fresco.service.messages.ErrorOuterClass.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
       */
      public Builder setError(dk.alexandra.fresco.service.messages.ErrorOuterClass.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
       */
      public Builder setError(
          dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
       */
      public Builder mergeError(dk.alexandra.fresco.service.messages.ErrorOuterClass.Error value) {
        if (errorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              error_ != null &&
              error_ != dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.getDefaultInstance()) {
            error_ =
              dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          errorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.Builder getErrorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.ErrorOuterClass.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.ErrorOuterClass.Error, dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.Builder, dk.alexandra.fresco.service.messages.ErrorOuterClass.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.ErrorOuterClass.Error, dk.alexandra.fresco.service.messages.ErrorOuterClass.Error.Builder, dk.alexandra.fresco.service.messages.ErrorOuterClass.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.Builder, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutputOrBuilder> linearRegressionOutputBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
       * @return Whether the linearRegressionOutput field is set.
       */
      @java.lang.Override
      public boolean hasLinearRegressionOutput() {
        return outputCase_ == 10;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
       * @return The linearRegressionOutput.
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput getLinearRegressionOutput() {
        if (linearRegressionOutputBuilder_ == null) {
          if (outputCase_ == 10) {
            return (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_;
          }
          return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.getDefaultInstance();
        } else {
          if (outputCase_ == 10) {
            return linearRegressionOutputBuilder_.getMessage();
          }
          return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
       */
      public Builder setLinearRegressionOutput(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput value) {
        if (linearRegressionOutputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          output_ = value;
          onChanged();
        } else {
          linearRegressionOutputBuilder_.setMessage(value);
        }
        outputCase_ = 10;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
       */
      public Builder setLinearRegressionOutput(
          dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.Builder builderForValue) {
        if (linearRegressionOutputBuilder_ == null) {
          output_ = builderForValue.build();
          onChanged();
        } else {
          linearRegressionOutputBuilder_.setMessage(builderForValue.build());
        }
        outputCase_ = 10;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
       */
      public Builder mergeLinearRegressionOutput(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput value) {
        if (linearRegressionOutputBuilder_ == null) {
          if (outputCase_ == 10 &&
              output_ != dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.getDefaultInstance()) {
            output_ = dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.newBuilder((dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_)
                .mergeFrom(value).buildPartial();
          } else {
            output_ = value;
          }
          onChanged();
        } else {
          if (outputCase_ == 10) {
            linearRegressionOutputBuilder_.mergeFrom(value);
          }
          linearRegressionOutputBuilder_.setMessage(value);
        }
        outputCase_ = 10;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
       */
      public Builder clearLinearRegressionOutput() {
        if (linearRegressionOutputBuilder_ == null) {
          if (outputCase_ == 10) {
            outputCase_ = 0;
            output_ = null;
            onChanged();
          }
        } else {
          if (outputCase_ == 10) {
            outputCase_ = 0;
            output_ = null;
          }
          linearRegressionOutputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
       */
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.Builder getLinearRegressionOutputBuilder() {
        return getLinearRegressionOutputFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutputOrBuilder getLinearRegressionOutputOrBuilder() {
        if ((outputCase_ == 10) && (linearRegressionOutputBuilder_ != null)) {
          return linearRegressionOutputBuilder_.getMessageOrBuilder();
        } else {
          if (outputCase_ == 10) {
            return (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_;
          }
          return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.LinearRegressionOutput linearRegressionOutput = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.Builder, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutputOrBuilder> 
          getLinearRegressionOutputFieldBuilder() {
        if (linearRegressionOutputBuilder_ == null) {
          if (!(outputCase_ == 10)) {
            output_ = dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.getDefaultInstance();
          }
          linearRegressionOutputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.Builder, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutputOrBuilder>(
                  (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) output_,
                  getParentForChildren(),
                  isClean());
          output_ = null;
        }
        outputCase_ = 10;
        onChanged();;
        return linearRegressionOutputBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.TTest.TTestOutput, dk.alexandra.fresco.service.messages.TTest.TTestOutput.Builder, dk.alexandra.fresco.service.messages.TTest.TTestOutputOrBuilder> tTestOutputBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
       * @return Whether the tTestOutput field is set.
       */
      @java.lang.Override
      public boolean hasTTestOutput() {
        return outputCase_ == 20;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
       * @return The tTestOutput.
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.TTest.TTestOutput getTTestOutput() {
        if (tTestOutputBuilder_ == null) {
          if (outputCase_ == 20) {
            return (dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_;
          }
          return dk.alexandra.fresco.service.messages.TTest.TTestOutput.getDefaultInstance();
        } else {
          if (outputCase_ == 20) {
            return tTestOutputBuilder_.getMessage();
          }
          return dk.alexandra.fresco.service.messages.TTest.TTestOutput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
       */
      public Builder setTTestOutput(dk.alexandra.fresco.service.messages.TTest.TTestOutput value) {
        if (tTestOutputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          output_ = value;
          onChanged();
        } else {
          tTestOutputBuilder_.setMessage(value);
        }
        outputCase_ = 20;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
       */
      public Builder setTTestOutput(
          dk.alexandra.fresco.service.messages.TTest.TTestOutput.Builder builderForValue) {
        if (tTestOutputBuilder_ == null) {
          output_ = builderForValue.build();
          onChanged();
        } else {
          tTestOutputBuilder_.setMessage(builderForValue.build());
        }
        outputCase_ = 20;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
       */
      public Builder mergeTTestOutput(dk.alexandra.fresco.service.messages.TTest.TTestOutput value) {
        if (tTestOutputBuilder_ == null) {
          if (outputCase_ == 20 &&
              output_ != dk.alexandra.fresco.service.messages.TTest.TTestOutput.getDefaultInstance()) {
            output_ = dk.alexandra.fresco.service.messages.TTest.TTestOutput.newBuilder((dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_)
                .mergeFrom(value).buildPartial();
          } else {
            output_ = value;
          }
          onChanged();
        } else {
          if (outputCase_ == 20) {
            tTestOutputBuilder_.mergeFrom(value);
          }
          tTestOutputBuilder_.setMessage(value);
        }
        outputCase_ = 20;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
       */
      public Builder clearTTestOutput() {
        if (tTestOutputBuilder_ == null) {
          if (outputCase_ == 20) {
            outputCase_ = 0;
            output_ = null;
            onChanged();
          }
        } else {
          if (outputCase_ == 20) {
            outputCase_ = 0;
            output_ = null;
          }
          tTestOutputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
       */
      public dk.alexandra.fresco.service.messages.TTest.TTestOutput.Builder getTTestOutputBuilder() {
        return getTTestOutputFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.TTest.TTestOutputOrBuilder getTTestOutputOrBuilder() {
        if ((outputCase_ == 20) && (tTestOutputBuilder_ != null)) {
          return tTestOutputBuilder_.getMessageOrBuilder();
        } else {
          if (outputCase_ == 20) {
            return (dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_;
          }
          return dk.alexandra.fresco.service.messages.TTest.TTestOutput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.TTestOutput tTestOutput = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.TTest.TTestOutput, dk.alexandra.fresco.service.messages.TTest.TTestOutput.Builder, dk.alexandra.fresco.service.messages.TTest.TTestOutputOrBuilder> 
          getTTestOutputFieldBuilder() {
        if (tTestOutputBuilder_ == null) {
          if (!(outputCase_ == 20)) {
            output_ = dk.alexandra.fresco.service.messages.TTest.TTestOutput.getDefaultInstance();
          }
          tTestOutputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.TTest.TTestOutput, dk.alexandra.fresco.service.messages.TTest.TTestOutput.Builder, dk.alexandra.fresco.service.messages.TTest.TTestOutputOrBuilder>(
                  (dk.alexandra.fresco.service.messages.TTest.TTestOutput) output_,
                  getParentForChildren(),
                  isClean());
          output_ = null;
        }
        outputCase_ = 20;
        onChanged();;
        return tTestOutputBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutputOrBuilder> neuralNetworkOutputBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
       * @return Whether the neuralNetworkOutput field is set.
       */
      @java.lang.Override
      public boolean hasNeuralNetworkOutput() {
        return outputCase_ == 30;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
       * @return The neuralNetworkOutput.
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput getNeuralNetworkOutput() {
        if (neuralNetworkOutputBuilder_ == null) {
          if (outputCase_ == 30) {
            return (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_;
          }
          return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.getDefaultInstance();
        } else {
          if (outputCase_ == 30) {
            return neuralNetworkOutputBuilder_.getMessage();
          }
          return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
       */
      public Builder setNeuralNetworkOutput(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput value) {
        if (neuralNetworkOutputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          output_ = value;
          onChanged();
        } else {
          neuralNetworkOutputBuilder_.setMessage(value);
        }
        outputCase_ = 30;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
       */
      public Builder setNeuralNetworkOutput(
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.Builder builderForValue) {
        if (neuralNetworkOutputBuilder_ == null) {
          output_ = builderForValue.build();
          onChanged();
        } else {
          neuralNetworkOutputBuilder_.setMessage(builderForValue.build());
        }
        outputCase_ = 30;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
       */
      public Builder mergeNeuralNetworkOutput(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput value) {
        if (neuralNetworkOutputBuilder_ == null) {
          if (outputCase_ == 30 &&
              output_ != dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.getDefaultInstance()) {
            output_ = dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.newBuilder((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_)
                .mergeFrom(value).buildPartial();
          } else {
            output_ = value;
          }
          onChanged();
        } else {
          if (outputCase_ == 30) {
            neuralNetworkOutputBuilder_.mergeFrom(value);
          }
          neuralNetworkOutputBuilder_.setMessage(value);
        }
        outputCase_ = 30;
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
       */
      public Builder clearNeuralNetworkOutput() {
        if (neuralNetworkOutputBuilder_ == null) {
          if (outputCase_ == 30) {
            outputCase_ = 0;
            output_ = null;
            onChanged();
          }
        } else {
          if (outputCase_ == 30) {
            outputCase_ = 0;
            output_ = null;
          }
          neuralNetworkOutputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
       */
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.Builder getNeuralNetworkOutputBuilder() {
        return getNeuralNetworkOutputFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
       */
      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutputOrBuilder getNeuralNetworkOutputOrBuilder() {
        if ((outputCase_ == 30) && (neuralNetworkOutputBuilder_ != null)) {
          return neuralNetworkOutputBuilder_.getMessageOrBuilder();
        } else {
          if (outputCase_ == 30) {
            return (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_;
          }
          return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.getDefaultInstance();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkOutput neuralNetworkOutput = 30;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutputOrBuilder> 
          getNeuralNetworkOutputFieldBuilder() {
        if (neuralNetworkOutputBuilder_ == null) {
          if (!(outputCase_ == 30)) {
            output_ = dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.getDefaultInstance();
          }
          neuralNetworkOutputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutputOrBuilder>(
                  (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) output_,
                  getParentForChildren(),
                  isClean());
          output_ = null;
        }
        outputCase_ = 30;
        onChanged();;
        return neuralNetworkOutputBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.ServiceOutput)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.ServiceOutput)
    private static final dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput();
    }

    public static dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServiceOutput>
        PARSER = new com.google.protobuf.AbstractParser<ServiceOutput>() {
      @java.lang.Override
      public ServiceOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServiceOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ServiceOutput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServiceOutput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.ServiceIO.ServiceOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_ServiceInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_ServiceInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017ServiceIO.proto\022$dk.alexandra.fresco.s" +
      "ervice.messages\032\013Error.proto\032\026LinearRegr" +
      "ession.proto\032\013TTest.proto\032\023NeuralNetwork" +
      ".proto\"\252\002\n\014ServiceInput\022\023\n\013description\030\001" +
      " \001(\t\022\\\n\025linearRegressionInput\030\n \001(\0132;.dk" +
      ".alexandra.fresco.service.messages.Linea" +
      "rRegressionInputH\000\022F\n\ntTestInput\030\024 \001(\01320" +
      ".dk.alexandra.fresco.service.messages.TT" +
      "estInputH\000\022V\n\022neuralNetworkInput\030\036 \001(\01328" +
      ".dk.alexandra.fresco.service.messages.Ne" +
      "uralNetworkInputH\000B\007\n\005input\"\350\002\n\rServiceO" +
      "utput\022?\n\005error\030\001 \001(\0132+.dk.alexandra.fres" +
      "co.service.messages.ErrorH\001\210\001\001\022^\n\026linear" +
      "RegressionOutput\030\n \001(\0132<.dk.alexandra.fr" +
      "esco.service.messages.LinearRegressionOu" +
      "tputH\000\022H\n\013tTestOutput\030\024 \001(\01321.dk.alexand" +
      "ra.fresco.service.messages.TTestOutputH\000" +
      "\022X\n\023neuralNetworkOutput\030\036 \001(\01329.dk.alexa" +
      "ndra.fresco.service.messages.NeuralNetwo" +
      "rkOutputH\000B\010\n\006outputB\010\n\006_errorb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          dk.alexandra.fresco.service.messages.ErrorOuterClass.getDescriptor(),
          dk.alexandra.fresco.service.messages.LinearRegression.getDescriptor(),
          dk.alexandra.fresco.service.messages.TTest.getDescriptor(),
          dk.alexandra.fresco.service.messages.NeuralNetwork.getDescriptor(),
        });
    internal_static_dk_alexandra_fresco_service_messages_ServiceInput_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dk_alexandra_fresco_service_messages_ServiceInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_ServiceInput_descriptor,
        new java.lang.String[] { "Description", "LinearRegressionInput", "TTestInput", "NeuralNetworkInput", "Input", });
    internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_ServiceOutput_descriptor,
        new java.lang.String[] { "Error", "LinearRegressionOutput", "TTestOutput", "NeuralNetworkOutput", "Output", "Error", });
    dk.alexandra.fresco.service.messages.ErrorOuterClass.getDescriptor();
    dk.alexandra.fresco.service.messages.LinearRegression.getDescriptor();
    dk.alexandra.fresco.service.messages.TTest.getDescriptor();
    dk.alexandra.fresco.service.messages.NeuralNetwork.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
