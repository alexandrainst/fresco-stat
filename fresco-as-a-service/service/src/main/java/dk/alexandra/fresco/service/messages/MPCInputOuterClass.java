// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MPCInput.proto

package dk.alexandra.fresco.service.messages;

public final class MPCInputOuterClass {
  private MPCInputOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MPCInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.MPCInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double value = 1;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <code>double value = 1;</code>
     * @return The value.
     */
    double getValue();
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.MPCInput}
   */
  public static final class MPCInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.MPCInput)
      MPCInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MPCInput.newBuilder() to construct.
    private MPCInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MPCInput() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MPCInput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MPCInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              bitField0_ |= 0x00000001;
              value_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCInput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.class, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder.class);
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private double value_;
    /**
     * <code>double value = 1;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>double value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public double getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput other = (dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput) obj;

      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (java.lang.Double.doubleToLongBits(getValue())
            != java.lang.Double.doubleToLongBits(
                other.getValue())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getValue()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.MPCInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.MPCInput)
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCInput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.class, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        value_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCInput_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput build() {
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput buildPartial() {
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput result = new dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.value_ = value_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput) {
          return mergeFrom((dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput other) {
        if (other == dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double value_ ;
      /**
       * <code>double value = 1;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>double value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public double getValue() {
        return value_;
      }
      /**
       * <code>double value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(double value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.MPCInput)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.MPCInput)
    private static final dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput();
    }

    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MPCInput>
        PARSER = new com.google.protobuf.AbstractParser<MPCInput>() {
      @java.lang.Override
      public MPCInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MPCInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MPCInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MPCInput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MPCVectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.MPCVector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput> 
        getValuesList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput getValues(int index);
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    int getValuesCount();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder> 
        getValuesOrBuilderList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder getValuesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.MPCVector}
   */
  public static final class MPCVector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.MPCVector)
      MPCVectorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MPCVector.newBuilder() to construct.
    private MPCVector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MPCVector() {
      values_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MPCVector();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MPCVector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                values_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput>();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.add(
                  input.readMessage(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCVector_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCVector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.class, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder.class);
    }

    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput> values_;
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    @java.lang.Override
    public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    @java.lang.Override
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(1, values_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, values_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector other = (dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector) obj;

      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.MPCVector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.MPCVector)
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCVector_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCVector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.class, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getValuesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCVector_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector build() {
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector buildPartial() {
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector result = new dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector(this);
        int from_bitField0_ = bitField0_;
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector) {
          return mergeFrom((dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector other) {
        if (other == dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance()) return this;
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          values_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput>(values_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder> valuesBuilder_;

      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public Builder setValues(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public Builder setValues(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public Builder addValues(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public Builder addValues(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public Builder addValues(
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public Builder addValues(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCInput values = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInput.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCInputOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.MPCVector)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.MPCVector)
    private static final dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector();
    }

    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MPCVector>
        PARSER = new com.google.protobuf.AbstractParser<MPCVector>() {
      @java.lang.Override
      public MPCVector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MPCVector(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MPCVector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MPCVector> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MPCMatrixOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.MPCMatrix)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> 
        getRowsList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getRows(int index);
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getRowsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.MPCMatrix}
   */
  public static final class MPCMatrix extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.MPCMatrix)
      MPCMatrixOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MPCMatrix.newBuilder() to construct.
    private MPCMatrix(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MPCMatrix() {
      rows_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MPCMatrix();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MPCMatrix(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rows_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>();
                mutable_bitField0_ |= 0x00000001;
              }
              rows_.add(
                  input.readMessage(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.class, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder.class);
    }

    public static final int ROWS_FIELD_NUMBER = 1;
    private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> rows_;
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    @java.lang.Override
    public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    @java.lang.Override
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(1, rows_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rows_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix other = (dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix) obj;

      if (!getRowsList()
          .equals(other.getRowsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.MPCMatrix}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.MPCMatrix)
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.class, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix build() {
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix buildPartial() {
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix result = new dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix(this);
        int from_bitField0_ = bitField0_;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix) {
          return mergeFrom((dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix other) {
        if (other == dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.getDefaultInstance()) return this;
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rows_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>(rows_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public Builder setRows(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public Builder setRows(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public Builder addRows(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public Builder addRows(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public Builder addRows(
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public Builder addRows(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector rows = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.MPCMatrix)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.MPCMatrix)
    private static final dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix();
    }

    public static dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MPCMatrix>
        PARSER = new com.google.protobuf.AbstractParser<MPCMatrix>() {
      @java.lang.Override
      public MPCMatrix parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MPCMatrix(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MPCMatrix> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MPCMatrix> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_MPCInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_MPCInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_MPCVector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_MPCVector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016MPCInput.proto\022$dk.alexandra.fresco.se" +
      "rvice.messages\"(\n\010MPCInput\022\022\n\005value\030\001 \001(" +
      "\001H\000\210\001\001B\010\n\006_value\"K\n\tMPCVector\022>\n\006values\030" +
      "\001 \003(\0132..dk.alexandra.fresco.service.mess" +
      "ages.MPCInput\"J\n\tMPCMatrix\022=\n\004rows\030\001 \003(\013" +
      "2/.dk.alexandra.fresco.service.messages." +
      "MPCVectorb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_dk_alexandra_fresco_service_messages_MPCInput_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dk_alexandra_fresco_service_messages_MPCInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_MPCInput_descriptor,
        new java.lang.String[] { "Value", "Value", });
    internal_static_dk_alexandra_fresco_service_messages_MPCVector_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dk_alexandra_fresco_service_messages_MPCVector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_MPCVector_descriptor,
        new java.lang.String[] { "Values", });
    internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_MPCMatrix_descriptor,
        new java.lang.String[] { "Rows", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
