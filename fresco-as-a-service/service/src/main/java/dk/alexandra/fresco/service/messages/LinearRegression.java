// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LinearRegression.proto

package dk.alexandra.fresco.service.messages;

public final class LinearRegression {
  private LinearRegression() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LinearRegressionInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.LinearRegressionInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> 
        getXList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getX(int index);
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    int getXCount();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getXOrBuilderList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getXOrBuilder(
        int index);

    /**
     * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     * @return Whether the y field is set.
     */
    boolean hasY();
    /**
     * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     * @return The y.
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getY();
    /**
     * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getYOrBuilder();
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.LinearRegressionInput}
   */
  public static final class LinearRegressionInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.LinearRegressionInput)
      LinearRegressionInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LinearRegressionInput.newBuilder() to construct.
    private LinearRegressionInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LinearRegressionInput() {
      x_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LinearRegressionInput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LinearRegressionInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                x_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>();
                mutable_bitField0_ |= 0x00000001;
              }
              x_.add(
                  input.readMessage(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.parser(), extensionRegistry));
              break;
            }
            case 18: {
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder subBuilder = null;
              if (y_ != null) {
                subBuilder = y_.toBuilder();
              }
              y_ = input.readMessage(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(y_);
                y_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          x_ = java.util.Collections.unmodifiableList(x_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.class, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> x_;
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getXList() {
      return x_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getXOrBuilderList() {
      return x_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public int getXCount() {
      return x_.size();
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getX(int index) {
      return x_.get(index);
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getXOrBuilder(
        int index) {
      return x_.get(index);
    }

    public static final int Y_FIELD_NUMBER = 2;
    private dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector y_;
    /**
     * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     * @return Whether the y field is set.
     */
    @java.lang.Override
    public boolean hasY() {
      return y_ != null;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getY() {
      return y_ == null ? dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance() : y_;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getYOrBuilder() {
      return getY();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < x_.size(); i++) {
        output.writeMessage(1, x_.get(i));
      }
      if (y_ != null) {
        output.writeMessage(2, getY());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < x_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, x_.get(i));
      }
      if (y_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getY());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput other = (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) obj;

      if (!getXList()
          .equals(other.getXList())) return false;
      if (hasY() != other.hasY()) return false;
      if (hasY()) {
        if (!getY()
            .equals(other.getY())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getXCount() > 0) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getXList().hashCode();
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.LinearRegressionInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.LinearRegressionInput)
        dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.class, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getXFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (xBuilder_ == null) {
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          xBuilder_.clear();
        }
        if (yBuilder_ == null) {
          y_ = null;
        } else {
          y_ = null;
          yBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput build() {
        dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput buildPartial() {
        dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput result = new dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput(this);
        int from_bitField0_ = bitField0_;
        if (xBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            x_ = java.util.Collections.unmodifiableList(x_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.x_ = x_;
        } else {
          result.x_ = xBuilder_.build();
        }
        if (yBuilder_ == null) {
          result.y_ = y_;
        } else {
          result.y_ = yBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) {
          return mergeFrom((dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput other) {
        if (other == dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput.getDefaultInstance()) return this;
        if (xBuilder_ == null) {
          if (!other.x_.isEmpty()) {
            if (x_.isEmpty()) {
              x_ = other.x_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureXIsMutable();
              x_.addAll(other.x_);
            }
            onChanged();
          }
        } else {
          if (!other.x_.isEmpty()) {
            if (xBuilder_.isEmpty()) {
              xBuilder_.dispose();
              xBuilder_ = null;
              x_ = other.x_;
              bitField0_ = (bitField0_ & ~0x00000001);
              xBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getXFieldBuilder() : null;
            } else {
              xBuilder_.addAllMessages(other.x_);
            }
          }
        }
        if (other.hasY()) {
          mergeY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> x_ =
        java.util.Collections.emptyList();
      private void ensureXIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          x_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>(x_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> xBuilder_;

      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getXList() {
        if (xBuilder_ == null) {
          return java.util.Collections.unmodifiableList(x_);
        } else {
          return xBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public int getXCount() {
        if (xBuilder_ == null) {
          return x_.size();
        } else {
          return xBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getX(int index) {
        if (xBuilder_ == null) {
          return x_.get(index);
        } else {
          return xBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder setX(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (xBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXIsMutable();
          x_.set(index, value);
          onChanged();
        } else {
          xBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder setX(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          x_.set(index, builderForValue.build());
          onChanged();
        } else {
          xBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addX(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (xBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXIsMutable();
          x_.add(value);
          onChanged();
        } else {
          xBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addX(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (xBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXIsMutable();
          x_.add(index, value);
          onChanged();
        } else {
          xBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addX(
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          x_.add(builderForValue.build());
          onChanged();
        } else {
          xBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addX(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          x_.add(index, builderForValue.build());
          onChanged();
        } else {
          xBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addAllX(
          java.lang.Iterable<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> values) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, x_);
          onChanged();
        } else {
          xBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder clearX() {
        if (xBuilder_ == null) {
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          xBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder removeX(int index) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          x_.remove(index);
          onChanged();
        } else {
          xBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder getXBuilder(
          int index) {
        return getXFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getXOrBuilder(
          int index) {
        if (xBuilder_ == null) {
          return x_.get(index);  } else {
          return xBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
           getXOrBuilderList() {
        if (xBuilder_ != null) {
          return xBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(x_);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addXBuilder() {
        return getXFieldBuilder().addBuilder(
            dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addXBuilder(
          int index) {
        return getXFieldBuilder().addBuilder(
            index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder> 
           getXBuilderList() {
        return getXFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
          getXFieldBuilder() {
        if (xBuilder_ == null) {
          xBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder>(
                  x_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          x_ = null;
        }
        return xBuilder_;
      }

      private dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector y_;
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> yBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       * @return Whether the y field is set.
       */
      public boolean hasY() {
        return yBuilder_ != null || y_ != null;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       * @return The y.
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getY() {
        if (yBuilder_ == null) {
          return y_ == null ? dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance() : y_;
        } else {
          return yBuilder_.getMessage();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder setY(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (yBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          y_ = value;
          onChanged();
        } else {
          yBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder setY(
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (yBuilder_ == null) {
          y_ = builderForValue.build();
          onChanged();
        } else {
          yBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder mergeY(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (yBuilder_ == null) {
          if (y_ != null) {
            y_ =
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.newBuilder(y_).mergeFrom(value).buildPartial();
          } else {
            y_ = value;
          }
          onChanged();
        } else {
          yBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder clearY() {
        if (yBuilder_ == null) {
          y_ = null;
          onChanged();
        } else {
          y_ = null;
          yBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder getYBuilder() {
        
        onChanged();
        return getYFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getYOrBuilder() {
        if (yBuilder_ != null) {
          return yBuilder_.getMessageOrBuilder();
        } else {
          return y_ == null ?
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance() : y_;
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
          getYFieldBuilder() {
        if (yBuilder_ == null) {
          yBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder>(
                  getY(),
                  getParentForChildren(),
                  isClean());
          y_ = null;
        }
        return yBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.LinearRegressionInput)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.LinearRegressionInput)
    private static final dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput();
    }

    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LinearRegressionInput>
        PARSER = new com.google.protobuf.AbstractParser<LinearRegressionInput>() {
      @java.lang.Override
      public LinearRegressionInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LinearRegressionInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LinearRegressionInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LinearRegressionInput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LinearRegressionOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.LinearRegressionOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double beta = 1;</code>
     * @return A list containing the beta.
     */
    java.util.List<java.lang.Double> getBetaList();
    /**
     * <code>repeated double beta = 1;</code>
     * @return The count of beta.
     */
    int getBetaCount();
    /**
     * <code>repeated double beta = 1;</code>
     * @param index The index of the element to return.
     * @return The beta at the given index.
     */
    double getBeta(int index);
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.LinearRegressionOutput}
   */
  public static final class LinearRegressionOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.LinearRegressionOutput)
      LinearRegressionOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LinearRegressionOutput.newBuilder() to construct.
    private LinearRegressionOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LinearRegressionOutput() {
      beta_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LinearRegressionOutput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LinearRegressionOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                beta_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              beta_.addDouble(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                beta_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                beta_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          beta_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.class, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.Builder.class);
    }

    public static final int BETA_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.DoubleList beta_;
    /**
     * <code>repeated double beta = 1;</code>
     * @return A list containing the beta.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getBetaList() {
      return beta_;
    }
    /**
     * <code>repeated double beta = 1;</code>
     * @return The count of beta.
     */
    public int getBetaCount() {
      return beta_.size();
    }
    /**
     * <code>repeated double beta = 1;</code>
     * @param index The index of the element to return.
     * @return The beta at the given index.
     */
    public double getBeta(int index) {
      return beta_.getDouble(index);
    }
    private int betaMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getBetaList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(betaMemoizedSerializedSize);
      }
      for (int i = 0; i < beta_.size(); i++) {
        output.writeDoubleNoTag(beta_.getDouble(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getBetaList().size();
        size += dataSize;
        if (!getBetaList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        betaMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput other = (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) obj;

      if (!getBetaList()
          .equals(other.getBetaList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBetaCount() > 0) {
        hash = (37 * hash) + BETA_FIELD_NUMBER;
        hash = (53 * hash) + getBetaList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.LinearRegressionOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.LinearRegressionOutput)
        dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.class, dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        beta_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.LinearRegression.internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput build() {
        dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput buildPartial() {
        dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput result = new dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          beta_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.beta_ = beta_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) {
          return mergeFrom((dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput other) {
        if (other == dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput.getDefaultInstance()) return this;
        if (!other.beta_.isEmpty()) {
          if (beta_.isEmpty()) {
            beta_ = other.beta_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBetaIsMutable();
            beta_.addAll(other.beta_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.DoubleList beta_ = emptyDoubleList();
      private void ensureBetaIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          beta_ = mutableCopy(beta_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double beta = 1;</code>
       * @return A list containing the beta.
       */
      public java.util.List<java.lang.Double>
          getBetaList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(beta_) : beta_;
      }
      /**
       * <code>repeated double beta = 1;</code>
       * @return The count of beta.
       */
      public int getBetaCount() {
        return beta_.size();
      }
      /**
       * <code>repeated double beta = 1;</code>
       * @param index The index of the element to return.
       * @return The beta at the given index.
       */
      public double getBeta(int index) {
        return beta_.getDouble(index);
      }
      /**
       * <code>repeated double beta = 1;</code>
       * @param index The index to set the value at.
       * @param value The beta to set.
       * @return This builder for chaining.
       */
      public Builder setBeta(
          int index, double value) {
        ensureBetaIsMutable();
        beta_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double beta = 1;</code>
       * @param value The beta to add.
       * @return This builder for chaining.
       */
      public Builder addBeta(double value) {
        ensureBetaIsMutable();
        beta_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double beta = 1;</code>
       * @param values The beta to add.
       * @return This builder for chaining.
       */
      public Builder addAllBeta(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureBetaIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, beta_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double beta = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBeta() {
        beta_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.LinearRegressionOutput)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.LinearRegressionOutput)
    private static final dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput();
    }

    public static dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LinearRegressionOutput>
        PARSER = new com.google.protobuf.AbstractParser<LinearRegressionOutput>() {
      @java.lang.Override
      public LinearRegressionOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LinearRegressionOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LinearRegressionOutput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LinearRegressionOutput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.LinearRegression.LinearRegressionOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026LinearRegression.proto\022$dk.alexandra.f" +
      "resco.service.messages\032\016MPCInput.proto\"\217" +
      "\001\n\025LinearRegressionInput\022:\n\001x\030\001 \003(\0132/.dk" +
      ".alexandra.fresco.service.messages.MPCVe" +
      "ctor\022:\n\001y\030\002 \001(\0132/.dk.alexandra.fresco.se" +
      "rvice.messages.MPCVector\"&\n\026LinearRegres" +
      "sionOutput\022\014\n\004beta\030\001 \003(\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.getDescriptor(),
        });
    internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_LinearRegressionInput_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_LinearRegressionOutput_descriptor,
        new java.lang.String[] { "Beta", });
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
