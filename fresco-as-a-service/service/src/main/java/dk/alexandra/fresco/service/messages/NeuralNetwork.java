// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NeuralNetwork.proto

package dk.alexandra.fresco.service.messages;

public final class NeuralNetwork {
  private NeuralNetwork() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code dk.alexandra.fresco.service.messages.ActivationFunction}
   */
  public enum ActivationFunction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SIGMOID = 0;</code>
     */
    SIGMOID(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SIGMOID = 0;</code>
     */
    public static final int SIGMOID_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActivationFunction valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ActivationFunction forNumber(int value) {
      switch (value) {
        case 0: return SIGMOID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ActivationFunction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ActivationFunction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActivationFunction>() {
            public ActivationFunction findValueByNumber(int number) {
              return ActivationFunction.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.NeuralNetwork.getDescriptor().getEnumTypes().get(0);
    }

    private static final ActivationFunction[] VALUES = values();

    public static ActivationFunction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ActivationFunction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dk.alexandra.fresco.service.messages.ActivationFunction)
  }

  public interface NeuralNetworkParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.NeuralNetworkParameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix> 
        getWeightsList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix getWeights(int index);
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    int getWeightsCount();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder> 
        getWeightsOrBuilderList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder getWeightsOrBuilder(
        int index);

    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> 
        getBiasesList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getBiases(int index);
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    int getBiasesCount();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getBiasesOrBuilderList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getBiasesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.NeuralNetworkParameters}
   */
  public static final class NeuralNetworkParameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.NeuralNetworkParameters)
      NeuralNetworkParametersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NeuralNetworkParameters.newBuilder() to construct.
    private NeuralNetworkParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NeuralNetworkParameters() {
      weights_ = java.util.Collections.emptyList();
      biases_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NeuralNetworkParameters();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NeuralNetworkParameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                weights_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix>();
                mutable_bitField0_ |= 0x00000001;
              }
              weights_.add(
                  input.readMessage(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                biases_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>();
                mutable_bitField0_ |= 0x00000002;
              }
              biases_.add(
                  input.readMessage(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          weights_ = java.util.Collections.unmodifiableList(weights_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          biases_ = java.util.Collections.unmodifiableList(biases_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.class, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.Builder.class);
    }

    public static final int WEIGHTS_FIELD_NUMBER = 1;
    private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix> weights_;
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    @java.lang.Override
    public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix> getWeightsList() {
      return weights_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder> 
        getWeightsOrBuilderList() {
      return weights_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    @java.lang.Override
    public int getWeightsCount() {
      return weights_.size();
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix getWeights(int index) {
      return weights_.get(index);
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder getWeightsOrBuilder(
        int index) {
      return weights_.get(index);
    }

    public static final int BIASES_FIELD_NUMBER = 2;
    private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> biases_;
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    @java.lang.Override
    public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getBiasesList() {
      return biases_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getBiasesOrBuilderList() {
      return biases_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    @java.lang.Override
    public int getBiasesCount() {
      return biases_.size();
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getBiases(int index) {
      return biases_.get(index);
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getBiasesOrBuilder(
        int index) {
      return biases_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < weights_.size(); i++) {
        output.writeMessage(1, weights_.get(i));
      }
      for (int i = 0; i < biases_.size(); i++) {
        output.writeMessage(2, biases_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < weights_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, weights_.get(i));
      }
      for (int i = 0; i < biases_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, biases_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters other = (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters) obj;

      if (!getWeightsList()
          .equals(other.getWeightsList())) return false;
      if (!getBiasesList()
          .equals(other.getBiasesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getWeightsCount() > 0) {
        hash = (37 * hash) + WEIGHTS_FIELD_NUMBER;
        hash = (53 * hash) + getWeightsList().hashCode();
      }
      if (getBiasesCount() > 0) {
        hash = (37 * hash) + BIASES_FIELD_NUMBER;
        hash = (53 * hash) + getBiasesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.NeuralNetworkParameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.NeuralNetworkParameters)
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.class, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWeightsFieldBuilder();
          getBiasesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (weightsBuilder_ == null) {
          weights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          weightsBuilder_.clear();
        }
        if (biasesBuilder_ == null) {
          biases_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          biasesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters build() {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters buildPartial() {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters result = new dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters(this);
        int from_bitField0_ = bitField0_;
        if (weightsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            weights_ = java.util.Collections.unmodifiableList(weights_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.weights_ = weights_;
        } else {
          result.weights_ = weightsBuilder_.build();
        }
        if (biasesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            biases_ = java.util.Collections.unmodifiableList(biases_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.biases_ = biases_;
        } else {
          result.biases_ = biasesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters) {
          return mergeFrom((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters other) {
        if (other == dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.getDefaultInstance()) return this;
        if (weightsBuilder_ == null) {
          if (!other.weights_.isEmpty()) {
            if (weights_.isEmpty()) {
              weights_ = other.weights_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureWeightsIsMutable();
              weights_.addAll(other.weights_);
            }
            onChanged();
          }
        } else {
          if (!other.weights_.isEmpty()) {
            if (weightsBuilder_.isEmpty()) {
              weightsBuilder_.dispose();
              weightsBuilder_ = null;
              weights_ = other.weights_;
              bitField0_ = (bitField0_ & ~0x00000001);
              weightsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWeightsFieldBuilder() : null;
            } else {
              weightsBuilder_.addAllMessages(other.weights_);
            }
          }
        }
        if (biasesBuilder_ == null) {
          if (!other.biases_.isEmpty()) {
            if (biases_.isEmpty()) {
              biases_ = other.biases_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBiasesIsMutable();
              biases_.addAll(other.biases_);
            }
            onChanged();
          }
        } else {
          if (!other.biases_.isEmpty()) {
            if (biasesBuilder_.isEmpty()) {
              biasesBuilder_.dispose();
              biasesBuilder_ = null;
              biases_ = other.biases_;
              bitField0_ = (bitField0_ & ~0x00000002);
              biasesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBiasesFieldBuilder() : null;
            } else {
              biasesBuilder_.addAllMessages(other.biases_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix> weights_ =
        java.util.Collections.emptyList();
      private void ensureWeightsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          weights_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix>(weights_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder> weightsBuilder_;

      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix> getWeightsList() {
        if (weightsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(weights_);
        } else {
          return weightsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public int getWeightsCount() {
        if (weightsBuilder_ == null) {
          return weights_.size();
        } else {
          return weightsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix getWeights(int index) {
        if (weightsBuilder_ == null) {
          return weights_.get(index);
        } else {
          return weightsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public Builder setWeights(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix value) {
        if (weightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeightsIsMutable();
          weights_.set(index, value);
          onChanged();
        } else {
          weightsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public Builder setWeights(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder builderForValue) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          weights_.set(index, builderForValue.build());
          onChanged();
        } else {
          weightsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public Builder addWeights(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix value) {
        if (weightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeightsIsMutable();
          weights_.add(value);
          onChanged();
        } else {
          weightsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public Builder addWeights(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix value) {
        if (weightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeightsIsMutable();
          weights_.add(index, value);
          onChanged();
        } else {
          weightsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public Builder addWeights(
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder builderForValue) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          weights_.add(builderForValue.build());
          onChanged();
        } else {
          weightsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public Builder addWeights(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder builderForValue) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          weights_.add(index, builderForValue.build());
          onChanged();
        } else {
          weightsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public Builder addAllWeights(
          java.lang.Iterable<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix> values) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, weights_);
          onChanged();
        } else {
          weightsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public Builder clearWeights() {
        if (weightsBuilder_ == null) {
          weights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          weightsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public Builder removeWeights(int index) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          weights_.remove(index);
          onChanged();
        } else {
          weightsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder getWeightsBuilder(
          int index) {
        return getWeightsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder getWeightsOrBuilder(
          int index) {
        if (weightsBuilder_ == null) {
          return weights_.get(index);  } else {
          return weightsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder> 
           getWeightsOrBuilderList() {
        if (weightsBuilder_ != null) {
          return weightsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(weights_);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder addWeightsBuilder() {
        return getWeightsFieldBuilder().addBuilder(
            dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder addWeightsBuilder(
          int index) {
        return getWeightsFieldBuilder().addBuilder(
            index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCMatrix weights = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder> 
           getWeightsBuilderList() {
        return getWeightsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder> 
          getWeightsFieldBuilder() {
        if (weightsBuilder_ == null) {
          weightsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrix.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCMatrixOrBuilder>(
                  weights_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          weights_ = null;
        }
        return weightsBuilder_;
      }

      private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> biases_ =
        java.util.Collections.emptyList();
      private void ensureBiasesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          biases_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>(biases_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> biasesBuilder_;

      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getBiasesList() {
        if (biasesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(biases_);
        } else {
          return biasesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public int getBiasesCount() {
        if (biasesBuilder_ == null) {
          return biases_.size();
        } else {
          return biasesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getBiases(int index) {
        if (biasesBuilder_ == null) {
          return biases_.get(index);
        } else {
          return biasesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public Builder setBiases(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (biasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBiasesIsMutable();
          biases_.set(index, value);
          onChanged();
        } else {
          biasesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public Builder setBiases(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          biases_.set(index, builderForValue.build());
          onChanged();
        } else {
          biasesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public Builder addBiases(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (biasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBiasesIsMutable();
          biases_.add(value);
          onChanged();
        } else {
          biasesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public Builder addBiases(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (biasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBiasesIsMutable();
          biases_.add(index, value);
          onChanged();
        } else {
          biasesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public Builder addBiases(
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          biases_.add(builderForValue.build());
          onChanged();
        } else {
          biasesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public Builder addBiases(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          biases_.add(index, builderForValue.build());
          onChanged();
        } else {
          biasesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public Builder addAllBiases(
          java.lang.Iterable<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> values) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, biases_);
          onChanged();
        } else {
          biasesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public Builder clearBiases() {
        if (biasesBuilder_ == null) {
          biases_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          biasesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public Builder removeBiases(int index) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          biases_.remove(index);
          onChanged();
        } else {
          biasesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder getBiasesBuilder(
          int index) {
        return getBiasesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getBiasesOrBuilder(
          int index) {
        if (biasesBuilder_ == null) {
          return biases_.get(index);  } else {
          return biasesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
           getBiasesOrBuilderList() {
        if (biasesBuilder_ != null) {
          return biasesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(biases_);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addBiasesBuilder() {
        return getBiasesFieldBuilder().addBuilder(
            dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addBiasesBuilder(
          int index) {
        return getBiasesFieldBuilder().addBuilder(
            index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector biases = 2;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder> 
           getBiasesBuilderList() {
        return getBiasesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
          getBiasesFieldBuilder() {
        if (biasesBuilder_ == null) {
          biasesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder>(
                  biases_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          biases_ = null;
        }
        return biasesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.NeuralNetworkParameters)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.NeuralNetworkParameters)
    private static final dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters();
    }

    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NeuralNetworkParameters>
        PARSER = new com.google.protobuf.AbstractParser<NeuralNetworkParameters>() {
      @java.lang.Override
      public NeuralNetworkParameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NeuralNetworkParameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NeuralNetworkParameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NeuralNetworkParameters> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NeuralNetworkDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.NeuralNetworkData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> 
        getXList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getX(int index);
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    int getXCount();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getXOrBuilderList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getXOrBuilder(
        int index);

    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> 
        getYList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getY(int index);
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    int getYCount();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getYOrBuilderList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getYOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.NeuralNetworkData}
   */
  public static final class NeuralNetworkData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.NeuralNetworkData)
      NeuralNetworkDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NeuralNetworkData.newBuilder() to construct.
    private NeuralNetworkData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NeuralNetworkData() {
      x_ = java.util.Collections.emptyList();
      y_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NeuralNetworkData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NeuralNetworkData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                x_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>();
                mutable_bitField0_ |= 0x00000001;
              }
              x_.add(
                  input.readMessage(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                y_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>();
                mutable_bitField0_ |= 0x00000002;
              }
              y_.add(
                  input.readMessage(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          x_ = java.util.Collections.unmodifiableList(x_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          y_ = java.util.Collections.unmodifiableList(y_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.class, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> x_;
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getXList() {
      return x_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getXOrBuilderList() {
      return x_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public int getXCount() {
      return x_.size();
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getX(int index) {
      return x_.get(index);
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getXOrBuilder(
        int index) {
      return x_.get(index);
    }

    public static final int Y_FIELD_NUMBER = 2;
    private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> y_;
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    @java.lang.Override
    public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getYList() {
      return y_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
        getYOrBuilderList() {
      return y_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    @java.lang.Override
    public int getYCount() {
      return y_.size();
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getY(int index) {
      return y_.get(index);
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getYOrBuilder(
        int index) {
      return y_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < x_.size(); i++) {
        output.writeMessage(1, x_.get(i));
      }
      for (int i = 0; i < y_.size(); i++) {
        output.writeMessage(2, y_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < x_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, x_.get(i));
      }
      for (int i = 0; i < y_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, y_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData other = (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData) obj;

      if (!getXList()
          .equals(other.getXList())) return false;
      if (!getYList()
          .equals(other.getYList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getXCount() > 0) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getXList().hashCode();
      }
      if (getYCount() > 0) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getYList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.NeuralNetworkData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.NeuralNetworkData)
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.class, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getXFieldBuilder();
          getYFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (xBuilder_ == null) {
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          xBuilder_.clear();
        }
        if (yBuilder_ == null) {
          y_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          yBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData build() {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData buildPartial() {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData result = new dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData(this);
        int from_bitField0_ = bitField0_;
        if (xBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            x_ = java.util.Collections.unmodifiableList(x_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.x_ = x_;
        } else {
          result.x_ = xBuilder_.build();
        }
        if (yBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            y_ = java.util.Collections.unmodifiableList(y_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.y_ = y_;
        } else {
          result.y_ = yBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData) {
          return mergeFrom((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData other) {
        if (other == dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.getDefaultInstance()) return this;
        if (xBuilder_ == null) {
          if (!other.x_.isEmpty()) {
            if (x_.isEmpty()) {
              x_ = other.x_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureXIsMutable();
              x_.addAll(other.x_);
            }
            onChanged();
          }
        } else {
          if (!other.x_.isEmpty()) {
            if (xBuilder_.isEmpty()) {
              xBuilder_.dispose();
              xBuilder_ = null;
              x_ = other.x_;
              bitField0_ = (bitField0_ & ~0x00000001);
              xBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getXFieldBuilder() : null;
            } else {
              xBuilder_.addAllMessages(other.x_);
            }
          }
        }
        if (yBuilder_ == null) {
          if (!other.y_.isEmpty()) {
            if (y_.isEmpty()) {
              y_ = other.y_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureYIsMutable();
              y_.addAll(other.y_);
            }
            onChanged();
          }
        } else {
          if (!other.y_.isEmpty()) {
            if (yBuilder_.isEmpty()) {
              yBuilder_.dispose();
              yBuilder_ = null;
              y_ = other.y_;
              bitField0_ = (bitField0_ & ~0x00000002);
              yBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getYFieldBuilder() : null;
            } else {
              yBuilder_.addAllMessages(other.y_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> x_ =
        java.util.Collections.emptyList();
      private void ensureXIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          x_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>(x_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> xBuilder_;

      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getXList() {
        if (xBuilder_ == null) {
          return java.util.Collections.unmodifiableList(x_);
        } else {
          return xBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public int getXCount() {
        if (xBuilder_ == null) {
          return x_.size();
        } else {
          return xBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getX(int index) {
        if (xBuilder_ == null) {
          return x_.get(index);
        } else {
          return xBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder setX(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (xBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXIsMutable();
          x_.set(index, value);
          onChanged();
        } else {
          xBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder setX(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          x_.set(index, builderForValue.build());
          onChanged();
        } else {
          xBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addX(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (xBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXIsMutable();
          x_.add(value);
          onChanged();
        } else {
          xBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addX(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (xBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXIsMutable();
          x_.add(index, value);
          onChanged();
        } else {
          xBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addX(
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          x_.add(builderForValue.build());
          onChanged();
        } else {
          xBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addX(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          x_.add(index, builderForValue.build());
          onChanged();
        } else {
          xBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder addAllX(
          java.lang.Iterable<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> values) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, x_);
          onChanged();
        } else {
          xBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder clearX() {
        if (xBuilder_ == null) {
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          xBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public Builder removeX(int index) {
        if (xBuilder_ == null) {
          ensureXIsMutable();
          x_.remove(index);
          onChanged();
        } else {
          xBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder getXBuilder(
          int index) {
        return getXFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getXOrBuilder(
          int index) {
        if (xBuilder_ == null) {
          return x_.get(index);  } else {
          return xBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
           getXOrBuilderList() {
        if (xBuilder_ != null) {
          return xBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(x_);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addXBuilder() {
        return getXFieldBuilder().addBuilder(
            dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addXBuilder(
          int index) {
        return getXFieldBuilder().addBuilder(
            index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector x = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder> 
           getXBuilderList() {
        return getXFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
          getXFieldBuilder() {
        if (xBuilder_ == null) {
          xBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder>(
                  x_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          x_ = null;
        }
        return xBuilder_;
      }

      private java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> y_ =
        java.util.Collections.emptyList();
      private void ensureYIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          y_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector>(y_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> yBuilder_;

      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> getYList() {
        if (yBuilder_ == null) {
          return java.util.Collections.unmodifiableList(y_);
        } else {
          return yBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public int getYCount() {
        if (yBuilder_ == null) {
          return y_.size();
        } else {
          return yBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector getY(int index) {
        if (yBuilder_ == null) {
          return y_.get(index);
        } else {
          return yBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder setY(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (yBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureYIsMutable();
          y_.set(index, value);
          onChanged();
        } else {
          yBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder setY(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (yBuilder_ == null) {
          ensureYIsMutable();
          y_.set(index, builderForValue.build());
          onChanged();
        } else {
          yBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder addY(dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (yBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureYIsMutable();
          y_.add(value);
          onChanged();
        } else {
          yBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder addY(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector value) {
        if (yBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureYIsMutable();
          y_.add(index, value);
          onChanged();
        } else {
          yBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder addY(
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (yBuilder_ == null) {
          ensureYIsMutable();
          y_.add(builderForValue.build());
          onChanged();
        } else {
          yBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder addY(
          int index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder builderForValue) {
        if (yBuilder_ == null) {
          ensureYIsMutable();
          y_.add(index, builderForValue.build());
          onChanged();
        } else {
          yBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder addAllY(
          java.lang.Iterable<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector> values) {
        if (yBuilder_ == null) {
          ensureYIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, y_);
          onChanged();
        } else {
          yBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder clearY() {
        if (yBuilder_ == null) {
          y_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          yBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public Builder removeY(int index) {
        if (yBuilder_ == null) {
          ensureYIsMutable();
          y_.remove(index);
          onChanged();
        } else {
          yBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder getYBuilder(
          int index) {
        return getYFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder getYOrBuilder(
          int index) {
        if (yBuilder_ == null) {
          return y_.get(index);  } else {
          return yBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public java.util.List<? extends dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
           getYOrBuilderList() {
        if (yBuilder_ != null) {
          return yBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(y_);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addYBuilder() {
        return getYFieldBuilder().addBuilder(
            dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder addYBuilder(
          int index) {
        return getYFieldBuilder().addBuilder(
            index, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.MPCVector y = 2;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder> 
           getYBuilderList() {
        return getYFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder> 
          getYFieldBuilder() {
        if (yBuilder_ == null) {
          yBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVector.Builder, dk.alexandra.fresco.service.messages.MPCInputOuterClass.MPCVectorOrBuilder>(
                  y_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          y_ = null;
        }
        return yBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.NeuralNetworkData)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.NeuralNetworkData)
    private static final dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData();
    }

    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NeuralNetworkData>
        PARSER = new com.google.protobuf.AbstractParser<NeuralNetworkData>() {
      @java.lang.Override
      public NeuralNetworkData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NeuralNetworkData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NeuralNetworkData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NeuralNetworkData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NeuralNetworkInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.NeuralNetworkInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
     * @return Whether the network field is set.
     */
    boolean hasNetwork();
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
     * @return The network.
     */
    dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters getNetwork();
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
     */
    dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParametersOrBuilder getNetworkOrBuilder();

    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
     * @return The data.
     */
    dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData getData();
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
     */
    dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkDataOrBuilder getDataOrBuilder();

    /**
     * <code>int32 categories = 3;</code>
     * @return The categories.
     */
    int getCategories();

    /**
     * <code>int32 epochs = 4;</code>
     * @return The epochs.
     */
    int getEpochs();

    /**
     * <code>double learningrate = 5;</code>
     * @return The learningrate.
     */
    double getLearningrate();
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.NeuralNetworkInput}
   */
  public static final class NeuralNetworkInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.NeuralNetworkInput)
      NeuralNetworkInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NeuralNetworkInput.newBuilder() to construct.
    private NeuralNetworkInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NeuralNetworkInput() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NeuralNetworkInput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NeuralNetworkInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.Builder subBuilder = null;
              if (network_ != null) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              categories_ = input.readInt32();
              break;
            }
            case 32: {

              epochs_ = input.readInt32();
              break;
            }
            case 41: {

              learningrate_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.class, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.Builder.class);
    }

    public static final int NETWORK_FIELD_NUMBER = 1;
    private dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters network_;
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return network_ != null;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
     * @return The network.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters getNetwork() {
      return network_ == null ? dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.getDefaultInstance() : network_;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParametersOrBuilder getNetworkOrBuilder() {
      return getNetwork();
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData data_;
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
     * @return The data.
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData getData() {
      return data_ == null ? dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.getDefaultInstance() : data_;
    }
    /**
     * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkDataOrBuilder getDataOrBuilder() {
      return getData();
    }

    public static final int CATEGORIES_FIELD_NUMBER = 3;
    private int categories_;
    /**
     * <code>int32 categories = 3;</code>
     * @return The categories.
     */
    @java.lang.Override
    public int getCategories() {
      return categories_;
    }

    public static final int EPOCHS_FIELD_NUMBER = 4;
    private int epochs_;
    /**
     * <code>int32 epochs = 4;</code>
     * @return The epochs.
     */
    @java.lang.Override
    public int getEpochs() {
      return epochs_;
    }

    public static final int LEARNINGRATE_FIELD_NUMBER = 5;
    private double learningrate_;
    /**
     * <code>double learningrate = 5;</code>
     * @return The learningrate.
     */
    @java.lang.Override
    public double getLearningrate() {
      return learningrate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (network_ != null) {
        output.writeMessage(1, getNetwork());
      }
      if (data_ != null) {
        output.writeMessage(2, getData());
      }
      if (categories_ != 0) {
        output.writeInt32(3, categories_);
      }
      if (epochs_ != 0) {
        output.writeInt32(4, epochs_);
      }
      if (learningrate_ != 0D) {
        output.writeDouble(5, learningrate_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (network_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNetwork());
      }
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getData());
      }
      if (categories_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, categories_);
      }
      if (epochs_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, epochs_);
      }
      if (learningrate_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, learningrate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput other = (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) obj;

      if (hasNetwork() != other.hasNetwork()) return false;
      if (hasNetwork()) {
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
      }
      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (getCategories()
          != other.getCategories()) return false;
      if (getEpochs()
          != other.getEpochs()) return false;
      if (java.lang.Double.doubleToLongBits(getLearningrate())
          != java.lang.Double.doubleToLongBits(
              other.getLearningrate())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (37 * hash) + CATEGORIES_FIELD_NUMBER;
      hash = (53 * hash) + getCategories();
      hash = (37 * hash) + EPOCHS_FIELD_NUMBER;
      hash = (53 * hash) + getEpochs();
      hash = (37 * hash) + LEARNINGRATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLearningrate()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.NeuralNetworkInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.NeuralNetworkInput)
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.class, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (networkBuilder_ == null) {
          network_ = null;
        } else {
          network_ = null;
          networkBuilder_ = null;
        }
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        categories_ = 0;

        epochs_ = 0;

        learningrate_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput build() {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput buildPartial() {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput result = new dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput(this);
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.categories_ = categories_;
        result.epochs_ = epochs_;
        result.learningrate_ = learningrate_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) {
          return mergeFrom((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput other) {
        if (other == dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput.getDefaultInstance()) return this;
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (other.getCategories() != 0) {
          setCategories(other.getCategories());
        }
        if (other.getEpochs() != 0) {
          setEpochs(other.getEpochs());
        }
        if (other.getLearningrate() != 0D) {
          setLearningrate(other.getLearningrate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters network_;
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParametersOrBuilder> networkBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
       * @return Whether the network field is set.
       */
      public boolean hasNetwork() {
        return networkBuilder_ != null || network_ != null;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
       * @return The network.
       */
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
       */
      public Builder setNetwork(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
       */
      public Builder setNetwork(
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
       */
      public Builder mergeNetwork(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters value) {
        if (networkBuilder_ == null) {
          if (network_ != null) {
            network_ =
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = null;
          onChanged();
        } else {
          network_ = null;
          networkBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.Builder getNetworkBuilder() {
        
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParametersOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.getDefaultInstance() : network_;
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkParameters network = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParametersOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParameters.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkParametersOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }

      private dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData data_;
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkDataOrBuilder> dataBuilder_;
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
       * @return The data.
       */
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
       */
      public Builder setData(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
       */
      public Builder setData(
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
       */
      public Builder mergeData(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkDataOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>.dk.alexandra.fresco.service.messages.NeuralNetworkData data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkData.Builder, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkDataOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private int categories_ ;
      /**
       * <code>int32 categories = 3;</code>
       * @return The categories.
       */
      @java.lang.Override
      public int getCategories() {
        return categories_;
      }
      /**
       * <code>int32 categories = 3;</code>
       * @param value The categories to set.
       * @return This builder for chaining.
       */
      public Builder setCategories(int value) {
        
        categories_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 categories = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCategories() {
        
        categories_ = 0;
        onChanged();
        return this;
      }

      private int epochs_ ;
      /**
       * <code>int32 epochs = 4;</code>
       * @return The epochs.
       */
      @java.lang.Override
      public int getEpochs() {
        return epochs_;
      }
      /**
       * <code>int32 epochs = 4;</code>
       * @param value The epochs to set.
       * @return This builder for chaining.
       */
      public Builder setEpochs(int value) {
        
        epochs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 epochs = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpochs() {
        
        epochs_ = 0;
        onChanged();
        return this;
      }

      private double learningrate_ ;
      /**
       * <code>double learningrate = 5;</code>
       * @return The learningrate.
       */
      @java.lang.Override
      public double getLearningrate() {
        return learningrate_;
      }
      /**
       * <code>double learningrate = 5;</code>
       * @param value The learningrate to set.
       * @return This builder for chaining.
       */
      public Builder setLearningrate(double value) {
        
        learningrate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double learningrate = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearningrate() {
        
        learningrate_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.NeuralNetworkInput)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.NeuralNetworkInput)
    private static final dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput();
    }

    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NeuralNetworkInput>
        PARSER = new com.google.protobuf.AbstractParser<NeuralNetworkInput>() {
      @java.lang.Override
      public NeuralNetworkInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NeuralNetworkInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NeuralNetworkInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NeuralNetworkInput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NeuralNetworkOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dk.alexandra.fresco.service.messages.NeuralNetworkOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    java.util.List<dk.alexandra.fresco.service.messages.Common.Matrix> 
        getWeightsList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    dk.alexandra.fresco.service.messages.Common.Matrix getWeights(int index);
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    int getWeightsCount();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    java.util.List<? extends dk.alexandra.fresco.service.messages.Common.MatrixOrBuilder> 
        getWeightsOrBuilderList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    dk.alexandra.fresco.service.messages.Common.MatrixOrBuilder getWeightsOrBuilder(
        int index);

    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    java.util.List<dk.alexandra.fresco.service.messages.Common.Vector> 
        getBiasesList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    dk.alexandra.fresco.service.messages.Common.Vector getBiases(int index);
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    int getBiasesCount();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    java.util.List<? extends dk.alexandra.fresco.service.messages.Common.VectorOrBuilder> 
        getBiasesOrBuilderList();
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    dk.alexandra.fresco.service.messages.Common.VectorOrBuilder getBiasesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dk.alexandra.fresco.service.messages.NeuralNetworkOutput}
   */
  public static final class NeuralNetworkOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dk.alexandra.fresco.service.messages.NeuralNetworkOutput)
      NeuralNetworkOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NeuralNetworkOutput.newBuilder() to construct.
    private NeuralNetworkOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NeuralNetworkOutput() {
      weights_ = java.util.Collections.emptyList();
      biases_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NeuralNetworkOutput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NeuralNetworkOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                weights_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.Common.Matrix>();
                mutable_bitField0_ |= 0x00000001;
              }
              weights_.add(
                  input.readMessage(dk.alexandra.fresco.service.messages.Common.Matrix.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                biases_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.Common.Vector>();
                mutable_bitField0_ |= 0x00000002;
              }
              biases_.add(
                  input.readMessage(dk.alexandra.fresco.service.messages.Common.Vector.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          weights_ = java.util.Collections.unmodifiableList(weights_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          biases_ = java.util.Collections.unmodifiableList(biases_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.class, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.Builder.class);
    }

    public static final int WEIGHTS_FIELD_NUMBER = 1;
    private java.util.List<dk.alexandra.fresco.service.messages.Common.Matrix> weights_;
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    @java.lang.Override
    public java.util.List<dk.alexandra.fresco.service.messages.Common.Matrix> getWeightsList() {
      return weights_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dk.alexandra.fresco.service.messages.Common.MatrixOrBuilder> 
        getWeightsOrBuilderList() {
      return weights_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    @java.lang.Override
    public int getWeightsCount() {
      return weights_.size();
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.Common.Matrix getWeights(int index) {
      return weights_.get(index);
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.Common.MatrixOrBuilder getWeightsOrBuilder(
        int index) {
      return weights_.get(index);
    }

    public static final int BIASES_FIELD_NUMBER = 2;
    private java.util.List<dk.alexandra.fresco.service.messages.Common.Vector> biases_;
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    @java.lang.Override
    public java.util.List<dk.alexandra.fresco.service.messages.Common.Vector> getBiasesList() {
      return biases_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dk.alexandra.fresco.service.messages.Common.VectorOrBuilder> 
        getBiasesOrBuilderList() {
      return biases_;
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    @java.lang.Override
    public int getBiasesCount() {
      return biases_.size();
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.Common.Vector getBiases(int index) {
      return biases_.get(index);
    }
    /**
     * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
     */
    @java.lang.Override
    public dk.alexandra.fresco.service.messages.Common.VectorOrBuilder getBiasesOrBuilder(
        int index) {
      return biases_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < weights_.size(); i++) {
        output.writeMessage(1, weights_.get(i));
      }
      for (int i = 0; i < biases_.size(); i++) {
        output.writeMessage(2, biases_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < weights_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, weights_.get(i));
      }
      for (int i = 0; i < biases_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, biases_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput)) {
        return super.equals(obj);
      }
      dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput other = (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) obj;

      if (!getWeightsList()
          .equals(other.getWeightsList())) return false;
      if (!getBiasesList()
          .equals(other.getBiasesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getWeightsCount() > 0) {
        hash = (37 * hash) + WEIGHTS_FIELD_NUMBER;
        hash = (53 * hash) + getWeightsList().hashCode();
      }
      if (getBiasesCount() > 0) {
        hash = (37 * hash) + BIASES_FIELD_NUMBER;
        hash = (53 * hash) + getBiasesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dk.alexandra.fresco.service.messages.NeuralNetworkOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dk.alexandra.fresco.service.messages.NeuralNetworkOutput)
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.class, dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.Builder.class);
      }

      // Construct using dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWeightsFieldBuilder();
          getBiasesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (weightsBuilder_ == null) {
          weights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          weightsBuilder_.clear();
        }
        if (biasesBuilder_ == null) {
          biases_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          biasesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_descriptor;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput getDefaultInstanceForType() {
        return dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.getDefaultInstance();
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput build() {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput buildPartial() {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput result = new dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput(this);
        int from_bitField0_ = bitField0_;
        if (weightsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            weights_ = java.util.Collections.unmodifiableList(weights_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.weights_ = weights_;
        } else {
          result.weights_ = weightsBuilder_.build();
        }
        if (biasesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            biases_ = java.util.Collections.unmodifiableList(biases_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.biases_ = biases_;
        } else {
          result.biases_ = biasesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) {
          return mergeFrom((dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput other) {
        if (other == dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput.getDefaultInstance()) return this;
        if (weightsBuilder_ == null) {
          if (!other.weights_.isEmpty()) {
            if (weights_.isEmpty()) {
              weights_ = other.weights_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureWeightsIsMutable();
              weights_.addAll(other.weights_);
            }
            onChanged();
          }
        } else {
          if (!other.weights_.isEmpty()) {
            if (weightsBuilder_.isEmpty()) {
              weightsBuilder_.dispose();
              weightsBuilder_ = null;
              weights_ = other.weights_;
              bitField0_ = (bitField0_ & ~0x00000001);
              weightsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWeightsFieldBuilder() : null;
            } else {
              weightsBuilder_.addAllMessages(other.weights_);
            }
          }
        }
        if (biasesBuilder_ == null) {
          if (!other.biases_.isEmpty()) {
            if (biases_.isEmpty()) {
              biases_ = other.biases_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBiasesIsMutable();
              biases_.addAll(other.biases_);
            }
            onChanged();
          }
        } else {
          if (!other.biases_.isEmpty()) {
            if (biasesBuilder_.isEmpty()) {
              biasesBuilder_.dispose();
              biasesBuilder_ = null;
              biases_ = other.biases_;
              bitField0_ = (bitField0_ & ~0x00000002);
              biasesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBiasesFieldBuilder() : null;
            } else {
              biasesBuilder_.addAllMessages(other.biases_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<dk.alexandra.fresco.service.messages.Common.Matrix> weights_ =
        java.util.Collections.emptyList();
      private void ensureWeightsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          weights_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.Common.Matrix>(weights_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.Common.Matrix, dk.alexandra.fresco.service.messages.Common.Matrix.Builder, dk.alexandra.fresco.service.messages.Common.MatrixOrBuilder> weightsBuilder_;

      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.Common.Matrix> getWeightsList() {
        if (weightsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(weights_);
        } else {
          return weightsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public int getWeightsCount() {
        if (weightsBuilder_ == null) {
          return weights_.size();
        } else {
          return weightsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.Matrix getWeights(int index) {
        if (weightsBuilder_ == null) {
          return weights_.get(index);
        } else {
          return weightsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public Builder setWeights(
          int index, dk.alexandra.fresco.service.messages.Common.Matrix value) {
        if (weightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeightsIsMutable();
          weights_.set(index, value);
          onChanged();
        } else {
          weightsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public Builder setWeights(
          int index, dk.alexandra.fresco.service.messages.Common.Matrix.Builder builderForValue) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          weights_.set(index, builderForValue.build());
          onChanged();
        } else {
          weightsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public Builder addWeights(dk.alexandra.fresco.service.messages.Common.Matrix value) {
        if (weightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeightsIsMutable();
          weights_.add(value);
          onChanged();
        } else {
          weightsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public Builder addWeights(
          int index, dk.alexandra.fresco.service.messages.Common.Matrix value) {
        if (weightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeightsIsMutable();
          weights_.add(index, value);
          onChanged();
        } else {
          weightsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public Builder addWeights(
          dk.alexandra.fresco.service.messages.Common.Matrix.Builder builderForValue) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          weights_.add(builderForValue.build());
          onChanged();
        } else {
          weightsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public Builder addWeights(
          int index, dk.alexandra.fresco.service.messages.Common.Matrix.Builder builderForValue) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          weights_.add(index, builderForValue.build());
          onChanged();
        } else {
          weightsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public Builder addAllWeights(
          java.lang.Iterable<? extends dk.alexandra.fresco.service.messages.Common.Matrix> values) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, weights_);
          onChanged();
        } else {
          weightsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public Builder clearWeights() {
        if (weightsBuilder_ == null) {
          weights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          weightsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public Builder removeWeights(int index) {
        if (weightsBuilder_ == null) {
          ensureWeightsIsMutable();
          weights_.remove(index);
          onChanged();
        } else {
          weightsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.Matrix.Builder getWeightsBuilder(
          int index) {
        return getWeightsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.MatrixOrBuilder getWeightsOrBuilder(
          int index) {
        if (weightsBuilder_ == null) {
          return weights_.get(index);  } else {
          return weightsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public java.util.List<? extends dk.alexandra.fresco.service.messages.Common.MatrixOrBuilder> 
           getWeightsOrBuilderList() {
        if (weightsBuilder_ != null) {
          return weightsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(weights_);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.Matrix.Builder addWeightsBuilder() {
        return getWeightsFieldBuilder().addBuilder(
            dk.alexandra.fresco.service.messages.Common.Matrix.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.Matrix.Builder addWeightsBuilder(
          int index) {
        return getWeightsFieldBuilder().addBuilder(
            index, dk.alexandra.fresco.service.messages.Common.Matrix.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Matrix weights = 1;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.Common.Matrix.Builder> 
           getWeightsBuilderList() {
        return getWeightsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.Common.Matrix, dk.alexandra.fresco.service.messages.Common.Matrix.Builder, dk.alexandra.fresco.service.messages.Common.MatrixOrBuilder> 
          getWeightsFieldBuilder() {
        if (weightsBuilder_ == null) {
          weightsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dk.alexandra.fresco.service.messages.Common.Matrix, dk.alexandra.fresco.service.messages.Common.Matrix.Builder, dk.alexandra.fresco.service.messages.Common.MatrixOrBuilder>(
                  weights_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          weights_ = null;
        }
        return weightsBuilder_;
      }

      private java.util.List<dk.alexandra.fresco.service.messages.Common.Vector> biases_ =
        java.util.Collections.emptyList();
      private void ensureBiasesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          biases_ = new java.util.ArrayList<dk.alexandra.fresco.service.messages.Common.Vector>(biases_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.Common.Vector, dk.alexandra.fresco.service.messages.Common.Vector.Builder, dk.alexandra.fresco.service.messages.Common.VectorOrBuilder> biasesBuilder_;

      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.Common.Vector> getBiasesList() {
        if (biasesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(biases_);
        } else {
          return biasesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public int getBiasesCount() {
        if (biasesBuilder_ == null) {
          return biases_.size();
        } else {
          return biasesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.Vector getBiases(int index) {
        if (biasesBuilder_ == null) {
          return biases_.get(index);
        } else {
          return biasesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public Builder setBiases(
          int index, dk.alexandra.fresco.service.messages.Common.Vector value) {
        if (biasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBiasesIsMutable();
          biases_.set(index, value);
          onChanged();
        } else {
          biasesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public Builder setBiases(
          int index, dk.alexandra.fresco.service.messages.Common.Vector.Builder builderForValue) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          biases_.set(index, builderForValue.build());
          onChanged();
        } else {
          biasesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public Builder addBiases(dk.alexandra.fresco.service.messages.Common.Vector value) {
        if (biasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBiasesIsMutable();
          biases_.add(value);
          onChanged();
        } else {
          biasesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public Builder addBiases(
          int index, dk.alexandra.fresco.service.messages.Common.Vector value) {
        if (biasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBiasesIsMutable();
          biases_.add(index, value);
          onChanged();
        } else {
          biasesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public Builder addBiases(
          dk.alexandra.fresco.service.messages.Common.Vector.Builder builderForValue) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          biases_.add(builderForValue.build());
          onChanged();
        } else {
          biasesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public Builder addBiases(
          int index, dk.alexandra.fresco.service.messages.Common.Vector.Builder builderForValue) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          biases_.add(index, builderForValue.build());
          onChanged();
        } else {
          biasesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public Builder addAllBiases(
          java.lang.Iterable<? extends dk.alexandra.fresco.service.messages.Common.Vector> values) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, biases_);
          onChanged();
        } else {
          biasesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public Builder clearBiases() {
        if (biasesBuilder_ == null) {
          biases_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          biasesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public Builder removeBiases(int index) {
        if (biasesBuilder_ == null) {
          ensureBiasesIsMutable();
          biases_.remove(index);
          onChanged();
        } else {
          biasesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.Vector.Builder getBiasesBuilder(
          int index) {
        return getBiasesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.VectorOrBuilder getBiasesOrBuilder(
          int index) {
        if (biasesBuilder_ == null) {
          return biases_.get(index);  } else {
          return biasesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public java.util.List<? extends dk.alexandra.fresco.service.messages.Common.VectorOrBuilder> 
           getBiasesOrBuilderList() {
        if (biasesBuilder_ != null) {
          return biasesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(biases_);
        }
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.Vector.Builder addBiasesBuilder() {
        return getBiasesFieldBuilder().addBuilder(
            dk.alexandra.fresco.service.messages.Common.Vector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public dk.alexandra.fresco.service.messages.Common.Vector.Builder addBiasesBuilder(
          int index) {
        return getBiasesFieldBuilder().addBuilder(
            index, dk.alexandra.fresco.service.messages.Common.Vector.getDefaultInstance());
      }
      /**
       * <code>repeated .dk.alexandra.fresco.service.messages.Vector biases = 2;</code>
       */
      public java.util.List<dk.alexandra.fresco.service.messages.Common.Vector.Builder> 
           getBiasesBuilderList() {
        return getBiasesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dk.alexandra.fresco.service.messages.Common.Vector, dk.alexandra.fresco.service.messages.Common.Vector.Builder, dk.alexandra.fresco.service.messages.Common.VectorOrBuilder> 
          getBiasesFieldBuilder() {
        if (biasesBuilder_ == null) {
          biasesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dk.alexandra.fresco.service.messages.Common.Vector, dk.alexandra.fresco.service.messages.Common.Vector.Builder, dk.alexandra.fresco.service.messages.Common.VectorOrBuilder>(
                  biases_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          biases_ = null;
        }
        return biasesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dk.alexandra.fresco.service.messages.NeuralNetworkOutput)
    }

    // @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.NeuralNetworkOutput)
    private static final dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput();
    }

    public static dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NeuralNetworkOutput>
        PARSER = new com.google.protobuf.AbstractParser<NeuralNetworkOutput>() {
      @java.lang.Override
      public NeuralNetworkOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NeuralNetworkOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NeuralNetworkOutput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NeuralNetworkOutput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dk.alexandra.fresco.service.messages.NeuralNetwork.NeuralNetworkOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023NeuralNetwork.proto\022$dk.alexandra.fres" +
      "co.service.messages\032\016MPCInput.proto\032\014Com" +
      "mon.proto\"\234\001\n\027NeuralNetworkParameters\022@\n" +
      "\007weights\030\001 \003(\0132/.dk.alexandra.fresco.ser" +
      "vice.messages.MPCMatrix\022?\n\006biases\030\002 \003(\0132" +
      "/.dk.alexandra.fresco.service.messages.M" +
      "PCVector\"\213\001\n\021NeuralNetworkData\022:\n\001x\030\001 \003(" +
      "\0132/.dk.alexandra.fresco.service.messages" +
      ".MPCVector\022:\n\001y\030\002 \003(\0132/.dk.alexandra.fre" +
      "sco.service.messages.MPCVector\"\345\001\n\022Neura" +
      "lNetworkInput\022N\n\007network\030\001 \001(\0132=.dk.alex" +
      "andra.fresco.service.messages.NeuralNetw" +
      "orkParameters\022E\n\004data\030\002 \001(\01327.dk.alexand" +
      "ra.fresco.service.messages.NeuralNetwork" +
      "Data\022\022\n\ncategories\030\003 \001(\005\022\016\n\006epochs\030\004 \001(\005" +
      "\022\024\n\014learningrate\030\005 \001(\001\"\222\001\n\023NeuralNetwork" +
      "Output\022=\n\007weights\030\001 \003(\0132,.dk.alexandra.f" +
      "resco.service.messages.Matrix\022<\n\006biases\030" +
      "\002 \003(\0132,.dk.alexandra.fresco.service.mess" +
      "ages.Vector*!\n\022ActivationFunction\022\013\n\007SIG" +
      "MOID\020\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          dk.alexandra.fresco.service.messages.MPCInputOuterClass.getDescriptor(),
          dk.alexandra.fresco.service.messages.Common.getDescriptor(),
        });
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkParameters_descriptor,
        new java.lang.String[] { "Weights", "Biases", });
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkData_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkInput_descriptor,
        new java.lang.String[] { "Network", "Data", "Categories", "Epochs", "Learningrate", });
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dk_alexandra_fresco_service_messages_NeuralNetworkOutput_descriptor,
        new java.lang.String[] { "Weights", "Biases", });
    dk.alexandra.fresco.service.messages.MPCInputOuterClass.getDescriptor();
    dk.alexandra.fresco.service.messages.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
