# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ServiceIO.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import Error_pb2 as Error__pb2
from . import LinearRegression_pb2 as LinearRegression__pb2
from . import TTest_pb2 as TTest__pb2
from . import NeuralNetwork_pb2 as NeuralNetwork__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ServiceIO.proto',
  package='dk.alexandra.fresco.service.messages',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0fServiceIO.proto\x12$dk.alexandra.fresco.service.messages\x1a\x0b\x45rror.proto\x1a\x16LinearRegression.proto\x1a\x0bTTest.proto\x1a\x13NeuralNetwork.proto\"\xaa\x02\n\x0cServiceInput\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t\x12\\\n\x15linearRegressionInput\x18\n \x01(\x0b\x32;.dk.alexandra.fresco.service.messages.LinearRegressionInputH\x00\x12\x46\n\ntTestInput\x18\x14 \x01(\x0b\x32\x30.dk.alexandra.fresco.service.messages.TTestInputH\x00\x12V\n\x12neuralNetworkInput\x18\x1e \x01(\x0b\x32\x38.dk.alexandra.fresco.service.messages.NeuralNetworkInputH\x00\x42\x07\n\x05input\"\xe8\x02\n\rServiceOutput\x12?\n\x05\x65rror\x18\x01 \x01(\x0b\x32+.dk.alexandra.fresco.service.messages.ErrorH\x01\x88\x01\x01\x12^\n\x16linearRegressionOutput\x18\n \x01(\x0b\x32<.dk.alexandra.fresco.service.messages.LinearRegressionOutputH\x00\x12H\n\x0btTestOutput\x18\x14 \x01(\x0b\x32\x31.dk.alexandra.fresco.service.messages.TTestOutputH\x00\x12X\n\x13neuralNetworkOutput\x18\x1e \x01(\x0b\x32\x39.dk.alexandra.fresco.service.messages.NeuralNetworkOutputH\x00\x42\x08\n\x06outputB\x08\n\x06_errorb\x06proto3'
  ,
  dependencies=[Error__pb2.DESCRIPTOR,LinearRegression__pb2.DESCRIPTOR,TTest__pb2.DESCRIPTOR,NeuralNetwork__pb2.DESCRIPTOR,])




_SERVICEINPUT = _descriptor.Descriptor(
  name='ServiceInput',
  full_name='dk.alexandra.fresco.service.messages.ServiceInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='dk.alexandra.fresco.service.messages.ServiceInput.description', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='linearRegressionInput', full_name='dk.alexandra.fresco.service.messages.ServiceInput.linearRegressionInput', index=1,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tTestInput', full_name='dk.alexandra.fresco.service.messages.ServiceInput.tTestInput', index=2,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='neuralNetworkInput', full_name='dk.alexandra.fresco.service.messages.ServiceInput.neuralNetworkInput', index=3,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='input', full_name='dk.alexandra.fresco.service.messages.ServiceInput.input',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=129,
  serialized_end=427,
)


_SERVICEOUTPUT = _descriptor.Descriptor(
  name='ServiceOutput',
  full_name='dk.alexandra.fresco.service.messages.ServiceOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='dk.alexandra.fresco.service.messages.ServiceOutput.error', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='linearRegressionOutput', full_name='dk.alexandra.fresco.service.messages.ServiceOutput.linearRegressionOutput', index=1,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tTestOutput', full_name='dk.alexandra.fresco.service.messages.ServiceOutput.tTestOutput', index=2,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='neuralNetworkOutput', full_name='dk.alexandra.fresco.service.messages.ServiceOutput.neuralNetworkOutput', index=3,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='output', full_name='dk.alexandra.fresco.service.messages.ServiceOutput.output',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_error', full_name='dk.alexandra.fresco.service.messages.ServiceOutput._error',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=430,
  serialized_end=790,
)

_SERVICEINPUT.fields_by_name['linearRegressionInput'].message_type = LinearRegression__pb2._LINEARREGRESSIONINPUT
_SERVICEINPUT.fields_by_name['tTestInput'].message_type = TTest__pb2._TTESTINPUT
_SERVICEINPUT.fields_by_name['neuralNetworkInput'].message_type = NeuralNetwork__pb2._NEURALNETWORKINPUT
_SERVICEINPUT.oneofs_by_name['input'].fields.append(
  _SERVICEINPUT.fields_by_name['linearRegressionInput'])
_SERVICEINPUT.fields_by_name['linearRegressionInput'].containing_oneof = _SERVICEINPUT.oneofs_by_name['input']
_SERVICEINPUT.oneofs_by_name['input'].fields.append(
  _SERVICEINPUT.fields_by_name['tTestInput'])
_SERVICEINPUT.fields_by_name['tTestInput'].containing_oneof = _SERVICEINPUT.oneofs_by_name['input']
_SERVICEINPUT.oneofs_by_name['input'].fields.append(
  _SERVICEINPUT.fields_by_name['neuralNetworkInput'])
_SERVICEINPUT.fields_by_name['neuralNetworkInput'].containing_oneof = _SERVICEINPUT.oneofs_by_name['input']
_SERVICEOUTPUT.fields_by_name['error'].message_type = Error__pb2._ERROR
_SERVICEOUTPUT.fields_by_name['linearRegressionOutput'].message_type = LinearRegression__pb2._LINEARREGRESSIONOUTPUT
_SERVICEOUTPUT.fields_by_name['tTestOutput'].message_type = TTest__pb2._TTESTOUTPUT
_SERVICEOUTPUT.fields_by_name['neuralNetworkOutput'].message_type = NeuralNetwork__pb2._NEURALNETWORKOUTPUT
_SERVICEOUTPUT.oneofs_by_name['output'].fields.append(
  _SERVICEOUTPUT.fields_by_name['linearRegressionOutput'])
_SERVICEOUTPUT.fields_by_name['linearRegressionOutput'].containing_oneof = _SERVICEOUTPUT.oneofs_by_name['output']
_SERVICEOUTPUT.oneofs_by_name['output'].fields.append(
  _SERVICEOUTPUT.fields_by_name['tTestOutput'])
_SERVICEOUTPUT.fields_by_name['tTestOutput'].containing_oneof = _SERVICEOUTPUT.oneofs_by_name['output']
_SERVICEOUTPUT.oneofs_by_name['output'].fields.append(
  _SERVICEOUTPUT.fields_by_name['neuralNetworkOutput'])
_SERVICEOUTPUT.fields_by_name['neuralNetworkOutput'].containing_oneof = _SERVICEOUTPUT.oneofs_by_name['output']
_SERVICEOUTPUT.oneofs_by_name['_error'].fields.append(
  _SERVICEOUTPUT.fields_by_name['error'])
_SERVICEOUTPUT.fields_by_name['error'].containing_oneof = _SERVICEOUTPUT.oneofs_by_name['_error']
DESCRIPTOR.message_types_by_name['ServiceInput'] = _SERVICEINPUT
DESCRIPTOR.message_types_by_name['ServiceOutput'] = _SERVICEOUTPUT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ServiceInput = _reflection.GeneratedProtocolMessageType('ServiceInput', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEINPUT,
  '__module__' : 'ServiceIO_pb2'
  # @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.ServiceInput)
  })
_sym_db.RegisterMessage(ServiceInput)

ServiceOutput = _reflection.GeneratedProtocolMessageType('ServiceOutput', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEOUTPUT,
  '__module__' : 'ServiceIO_pb2'
  # @@protoc_insertion_point(class_scope:dk.alexandra.fresco.service.messages.ServiceOutput)
  })
_sym_db.RegisterMessage(ServiceOutput)


# @@protoc_insertion_point(module_scope)
