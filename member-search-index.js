memberSearchIndex = [{"p":"dk.alexandra.fresco.stat.mlp.evaluation","c":"Accuracy","l":"Accuracy(MLP, List<ArrayList<DRes<SFixed>>>, ArrayList<DRes<SInt>>)","url":"%3Cinit%3E(dk.alexandra.fresco.stat.mlp.MLP,java.util.List,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.mlp.evaluation","c":"AccuracyBinary","l":"AccuracyBinary(MLP, List<ArrayList<DRes<SFixed>>>, ArrayList<DRes<SInt>>)","url":"%3Cinit%3E(dk.alexandra.fresco.stat.mlp.MLP,java.util.List,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"add(List<DRes<SFixed>>, List<DRes<SFixed>>, ProtocolBuilderNumeric)","url":"add(java.util.List,java.util.List,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"AffineMap","l":"AffineMap(Layer, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.stat.mlp.Layer,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"AffineMap","l":"AffineMap(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils.EntrywiseBinaryOp","l":"apply(A, B, ProtocolBuilderNumeric)","url":"apply(A,B,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils.EntrywiseUnaryOp","l":"apply(A, ProtocolBuilderNumeric)","url":"apply(A,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"MLP","l":"apply(ArrayList<DRes<SFixed>>)","url":"apply(java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MatrixUtils.MatrixPopulator","l":"apply(int, int)","url":"apply(int,int)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"BackPropagationOutput","l":"BackPropagationOutput(DRes<ArrayList<DRes<SFixed>>>, DRes<ArrayList<DRes<SFixed>>>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.DRes,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"backSubstitution(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"backSubstitution(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"backSubstitution(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"backSubstitution(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"BackSubstitution","l":"BackSubstitution(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"build(int, IntFunction<MultiDimensionalArray<S>>)","url":"build(int,java.util.function.IntFunction)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"build(List<Integer>, Function<List<Integer>, S>)","url":"build(java.util.List,java.util.function.Function)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"build(List<S>)","url":"build(java.util.List)"},{"p":"dk.alexandra.fresco.stat.anonymisation","c":"LeakyKAnonymity","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.anonymisation","c":"NoisyHistogram","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.anonymisation","c":"NoisyStats","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"Histogram","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"LeakyBreakTies","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"LeakyFrequencyTable","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"MultiDimensionalHistogram","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"PearsonCorrelation","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"Ranks","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleMean","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleMedian","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleQuantiles","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleStandardDeviation","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleVariance","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"TwoDimensionalHistogram","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"SP","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"SPD","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"SSD","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"SSE","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"USS","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive.sort","c":"FindTiedGroups","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"AffineMap","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"BackSubstitution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"Convolution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"ForwardSubstitution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"GramSchmidt","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"InvertTriangularMatrix","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"LinearInverseProblem","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"MoorePenrosePseudoInverse","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"NormalizeVector","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"Projection","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"QRAlgorithm","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"QRDecomposition","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Predict","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"Relu","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"ReluDerivative","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"Sigmoid","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"SigmoidDerivative","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp.evaluation","c":"Accuracy","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp.evaluation","c":"AccuracyBinary","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"LinearRegression","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"SimpleLinearRegression","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.regression.logistic","c":"LogisticRegression","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.regression.logistic","c":"LogisticRegressionGD","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.regression.logistic","c":"LogisticRegressionPrediction","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleBernoulliDistribution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleCategoricalDistribution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleExponentialDistribution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleIrwinHallDistribution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleLaplaceDistribution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleNormalDistribution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleRademacherDistribution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleUniformDistribution","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoSorter","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.survival.cox","c":"CoxGradientContinuous","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.survival.cox","c":"CoxGradientDiscrete","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.tests","c":"ChiSquareTest","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.tests","c":"FTest","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.tests","c":"KruskallWallisTest","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.tests","c":"OneSampleTTest","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.tests","c":"TwoSampleTTest","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MaxList","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MaxPair","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"TransposedMatrixAction","l":"buildComputation(ProtocolBuilderNumeric)","url":"buildComputation(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MatrixUtils","l":"buildMatrix(int, int, MatrixUtils.MatrixPopulator<E>)","url":"buildMatrix(int,int,dk.alexandra.fresco.stat.utils.MatrixUtils.MatrixPopulator)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"chiSquare(List<DRes<SInt>>, double[])","url":"chiSquare(java.util.List,double[])"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"chiSquare(List<DRes<SInt>>, double[])","url":"chiSquare(java.util.List,double[])"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"chiSquare(List<DRes<SInt>>, List<DRes<SFixed>>)","url":"chiSquare(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"chiSquare(List<DRes<SInt>>, List<DRes<SFixed>>)","url":"chiSquare(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.tests","c":"ChiSquareTest","l":"ChiSquareTest(List<DRes<SInt>>, double[])","url":"%3Cinit%3E(java.util.List,double[])"},{"p":"dk.alexandra.fresco.stat.tests","c":"ChiSquareTest","l":"ChiSquareTest(List<DRes<SInt>>, List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"Convolution","l":"Convolution(ArrayList<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.ArrayList,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"correlation(List<DRes<SFixed>>, DRes<SFixed>, List<DRes<SFixed>>, DRes<SFixed>)","url":"correlation(java.util.List,dk.alexandra.fresco.framework.DRes,java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"correlation(List<DRes<SFixed>>, DRes<SFixed>, List<DRes<SFixed>>, DRes<SFixed>)","url":"correlation(java.util.List,dk.alexandra.fresco.framework.DRes,java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"correlation(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"correlation(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"correlation(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"correlation(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.survival.cox","c":"CoxGradientContinuous","l":"CoxGradientContinuous(List<SurvivalInfoContinuous>, List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.survival.cox","c":"CoxGradientDiscrete","l":"CoxGradientDiscrete(List<SurvivalInfoDiscrete>, List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"coxRegressionContinuous(List<SurvivalInfoContinuous>, int, double, double[])","url":"coxRegressionContinuous(java.util.List,int,double,double[])"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"coxRegressionContinuous(List<SurvivalInfoContinuous>, int, double, double[])","url":"coxRegressionContinuous(java.util.List,int,double,double[])"},{"p":"dk.alexandra.fresco.stat.survival.cox","c":"CoxRegressionContinuous","l":"CoxRegressionContinuous(List<SurvivalInfoContinuous>, int, double, double[])","url":"%3Cinit%3E(java.util.List,int,double,double[])"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"coxRegressionDiscrete(List<SurvivalInfoDiscrete>, int, double, double[])","url":"coxRegressionDiscrete(java.util.List,int,double,double[])"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"coxRegressionDiscrete(List<SurvivalInfoDiscrete>, int, double, double[])","url":"coxRegressionDiscrete(java.util.List,int,double,double[])"},{"p":"dk.alexandra.fresco.stat.survival.cox","c":"CoxRegressionDiscrete","l":"CoxRegressionDiscrete(List<SurvivalInfoDiscrete>, int, double, double[])","url":"%3Cinit%3E(java.util.List,int,double,double[])"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoSorter","l":"data"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"div(List<DRes<SFixed>>, DRes<SFixed>, ProtocolBuilderNumeric)","url":"div(java.util.List,dk.alexandra.fresco.framework.DRes,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"entrywiseBinaryOp(List<A>, List<B>, VectorUtils.EntrywiseBinaryOp<A, B, C>, ProtocolBuilderNumeric)","url":"entrywiseBinaryOp(java.util.List,java.util.List,dk.alexandra.fresco.stat.utils.VectorUtils.EntrywiseBinaryOp,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"entrywiseUnaryOp(List<A>, VectorUtils.EntrywiseUnaryOp<A, C>, ProtocolBuilderNumeric)","url":"entrywiseUnaryOp(java.util.List,dk.alexandra.fresco.stat.utils.VectorUtils.EntrywiseUnaryOp,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"ffest(List<List<DRes<SFixed>>>)","url":"ffest(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"ffest(List<List<DRes<SFixed>>>)","url":"ffest(java.util.List)"},{"p":"dk.alexandra.fresco.stat.descriptive.sort","c":"FindTiedGroups","l":"FindTiedGroups(List<DRes<SInt>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"MLP","l":"fit(List<ArrayList<DRes<SFixed>>>, List<ArrayList<DRes<SFixed>>>, int, double)","url":"fit(java.util.List,java.util.List,int,double)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultMachineLearning","l":"fit(MLP, List<ArrayList<DRes<SFixed>>>, List<ArrayList<DRes<SFixed>>>, int, double)","url":"fit(dk.alexandra.fresco.stat.mlp.MLP,java.util.List,java.util.List,int,double)"},{"p":"dk.alexandra.fresco.stat","c":"MachineLearning","l":"fit(MLP, List<ArrayList<DRes<SFixed>>>, List<ArrayList<DRes<SFixed>>>, int, double)","url":"fit(dk.alexandra.fresco.stat.mlp.MLP,java.util.List,java.util.List,int,double)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"forEachWithIndices(BiConsumer<T, List<Integer>>)","url":"forEachWithIndices(java.util.function.BiConsumer)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"forwardSubstitution(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"forwardSubstitution(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"forwardSubstitution(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"forwardSubstitution(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"ForwardSubstitution","l":"ForwardSubstitution(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"frequencyTable(List<DRes<SInt>>)","url":"frequencyTable(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"frequencyTable(List<DRes<SInt>>)","url":"frequencyTable(java.util.List)"},{"p":"dk.alexandra.fresco.stat.tests","c":"KruskallWallisTest","l":"fromSFixed(List<List<DRes<SFixed>>>)","url":"fromSFixed(java.util.List)"},{"p":"dk.alexandra.fresco.stat.tests","c":"FTest","l":"FTest(List<List<DRes<SFixed>>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"ActivationFunction","l":"get(ArrayList<DRes<SFixed>>, ActivationFunction)","url":"get(java.util.ArrayList,dk.alexandra.fresco.stat.mlp.activationfunction.ActivationFunction)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"get(int[])"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"get(Integer...)","url":"get(java.lang.Integer...)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"get(List<Integer>)","url":"get(java.util.List)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"ForwardPropagationOutput","l":"getAfterActivation()"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"SimpleLinearRegression.SimpleLinearRegressionResult","l":"getAlpha()"},{"p":"dk.alexandra.fresco.stat.mlp","c":"ForwardPropagationOutput","l":"getBeforeActivation()"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"LinearRegression.LinearRegressionResult","l":"getBeta()"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"SimpleLinearRegression.SimpleLinearRegressionResult","l":"getBeta()"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Layer","l":"getBias()"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoContinuous","l":"getCensored()"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoDiscrete","l":"getCensored()"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoContinuous","l":"getCovariates()"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoDiscrete","l":"getCovariates()"},{"p":"dk.alexandra.fresco.stat.mlp","c":"BackPropagationOutput","l":"getDelta()"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"ActivationFunction","l":"getDerivative(ArrayList<DRes<SFixed>>, ArrayList<DRes<SFixed>>, ActivationFunction)","url":"getDerivative(java.util.ArrayList,java.util.ArrayList,dk.alexandra.fresco.stat.mlp.activationfunction.ActivationFunction)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"getDimension()"},{"p":"dk.alexandra.fresco.stat.mlp","c":"BackPropagationOutput","l":"getError()"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"SimpleLinearRegression.SimpleLinearRegressionResult","l":"getErrorAlphaSquared()"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"SimpleLinearRegression.SimpleLinearRegressionResult","l":"getErrorBetaSquared()"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"LinearRegression.LinearRegressionResult","l":"getErrorVariance()"},{"p":"dk.alexandra.fresco.stat.utils","c":"Triple","l":"getFirst()"},{"p":"dk.alexandra.fresco.stat.mlp","c":"MLP","l":"getLayer(int)"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"LinearRegression.LinearRegressionResult","l":"getRSquared()"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"SimpleLinearRegression.SimpleLinearRegressionResult","l":"getRSquared()"},{"p":"dk.alexandra.fresco.stat.utils","c":"Triple","l":"getSecond()"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"getShape()"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"LinearRegression.LinearRegressionResult","l":"getStdErrorsSquared()"},{"p":"dk.alexandra.fresco.stat.utils","c":"Triple","l":"getThird()"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoContinuous","l":"getTime()"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoDiscrete","l":"getTime()"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Layer","l":"getWeights()"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"gramSchmidt(List<ArrayList<DRes<SFixed>>>)","url":"gramSchmidt(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"gramSchmidt(List<ArrayList<DRes<SFixed>>>)","url":"gramSchmidt(java.util.List)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"GramSchmidt","l":"GramSchmidt(List<ArrayList<DRes<SFixed>>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"Histogram","l":"Histogram(List<DRes<SInt>>, List<DRes<SInt>>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"histogramContinuous(double[], List<DRes<SFixed>>)","url":"histogramContinuous(double[],java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"histogramContinuous(double[], List<DRes<SFixed>>)","url":"histogramContinuous(double[],java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"histogramContinuous(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"histogramContinuous(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"histogramContinuous(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"histogramContinuous(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"histogramDiscrete(int[], List<DRes<SInt>>)","url":"histogramDiscrete(int[],java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"histogramDiscrete(int[], List<DRes<SInt>>)","url":"histogramDiscrete(int[],java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"histogramDiscrete(List<DRes<SInt>>, List<DRes<SInt>>)","url":"histogramDiscrete(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"histogramDiscrete(List<DRes<SInt>>, List<DRes<SInt>>)","url":"histogramDiscrete(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"innerProductWithBitvector(List<DRes<SInt>>, List<DRes<SFixed>>, ProtocolBuilderNumeric)","url":"innerProductWithBitvector(java.util.List,java.util.List,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"innerProductWithBitvectorPublic(List<DRes<SInt>>, List<Double>, ProtocolBuilderNumeric)","url":"innerProductWithBitvectorPublic(java.util.List,java.util.List,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"input(List<BigInteger>, int, ProtocolBuilderNumeric)","url":"input(java.util.List,int,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"invertLowerTriangularMatrix(Matrix<DRes<SFixed>>)","url":"invertLowerTriangularMatrix(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"invertLowerTriangularMatrix(Matrix<DRes<SFixed>>)","url":"invertLowerTriangularMatrix(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"InvertTriangularMatrix","l":"InvertTriangularMatrix(Matrix<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"iterativeEigenvalues(Matrix<DRes<SFixed>>, int)","url":"iterativeEigenvalues(dk.alexandra.fresco.lib.common.collections.Matrix,int)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"iterativeEigenvalues(Matrix<DRes<SFixed>>, int)","url":"iterativeEigenvalues(dk.alexandra.fresco.lib.common.collections.Matrix,int)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"kAnonymize(Matrix<DRes<SInt>>, List<DRes<SInt>>, List<List<DRes<SInt>>>, int)","url":"kAnonymize(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.List,java.util.List,int)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"kAnonymize(Matrix<DRes<SInt>>, List<DRes<SInt>>, List<List<DRes<SInt>>>, int)","url":"kAnonymize(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.List,java.util.List,int)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"kAnonymizeAndOpen(Matrix<DRes<SInt>>, List<DRes<SInt>>, List<List<DRes<SInt>>>, int)","url":"kAnonymizeAndOpen(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.List,java.util.List,int)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"kAnonymizeAndOpen(Matrix<DRes<SInt>>, List<DRes<SInt>>, List<List<DRes<SInt>>>, int)","url":"kAnonymizeAndOpen(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.List,java.util.List,int)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"kruskallWallisTest(List<List<DRes<SFixed>>>)","url":"kruskallWallisTest(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"kruskallWallisTest(List<List<DRes<SFixed>>>)","url":"kruskallWallisTest(java.util.List)"},{"p":"dk.alexandra.fresco.stat.tests","c":"KruskallWallisTest","l":"KruskallWallisTest(List<List<DRes<SInt>>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Layer","l":"Layer(double[][], double[], ProtocolBuilderNumeric)","url":"%3Cinit%3E(double[][],double[],dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Layer","l":"Layer(double[][], double[], ProtocolBuilderNumeric, ActivationFunction)","url":"%3Cinit%3E(double[][],double[],dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric,dk.alexandra.fresco.stat.mlp.activationfunction.ActivationFunction)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Layer","l":"Layer(int, int, Random, ProtocolBuilderNumeric)","url":"%3Cinit%3E(int,int,java.util.Random,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Layer","l":"Layer(int, int, Random, ProtocolBuilderNumeric, ActivationFunction)","url":"%3Cinit%3E(int,int,java.util.Random,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric,dk.alexandra.fresco.stat.mlp.activationfunction.ActivationFunction)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Layer","l":"Layer(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>, ActivationFunction)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList,dk.alexandra.fresco.stat.mlp.activationfunction.ActivationFunction)"},{"p":"dk.alexandra.fresco.stat.utils","c":"Triple","l":"lazy(E, F, G)","url":"lazy(E,F,G)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"LeakyBreakTies","l":"LeakyBreakTies(List<DRes<SInt>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"leakyFrequencyTable(List<DRes<SInt>>)","url":"leakyFrequencyTable(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"leakyFrequencyTable(List<DRes<SInt>>)","url":"leakyFrequencyTable(java.util.List)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"LeakyFrequencyTable","l":"LeakyFrequencyTable(List<DRes<SInt>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.anonymisation","c":"LeakyKAnonymity","l":"LeakyKAnonymity(Matrix<DRes<SInt>>, List<DRes<SInt>>, List<List<DRes<SInt>>>, int)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.List,java.util.List,int)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"linearInverseProblem(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"linearInverseProblem(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"linearInverseProblem(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"linearInverseProblem(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"LinearInverseProblem","l":"LinearInverseProblem(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"linearRegression(List<ArrayList<DRes<SFixed>>>, ArrayList<DRes<SFixed>>)","url":"linearRegression(java.util.List,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"linearRegression(List<ArrayList<DRes<SFixed>>>, ArrayList<DRes<SFixed>>)","url":"linearRegression(java.util.List,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"LinearRegression","l":"LinearRegression(List<ArrayList<DRes<SFixed>>>, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"LinearRegression","l":"LinearRegression(List<ArrayList<DRes<SFixed>>>, ArrayList<DRes<SFixed>>, boolean)","url":"%3Cinit%3E(java.util.List,java.util.ArrayList,boolean)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"listBuilder(int, IntFunction<T>)","url":"listBuilder(int,java.util.function.IntFunction)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultMachineLearning","l":"logisticRegression(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>, double[], IntToDoubleFunction, int)","url":"logisticRegression(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList,double[],java.util.function.IntToDoubleFunction,int)"},{"p":"dk.alexandra.fresco.stat","c":"MachineLearning","l":"logisticRegression(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>, double[], IntToDoubleFunction, int)","url":"logisticRegression(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList,double[],java.util.function.IntToDoubleFunction,int)"},{"p":"dk.alexandra.fresco.stat.regression.logistic","c":"LogisticRegression","l":"LogisticRegression(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>, double[], IntToDoubleFunction, int)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList,double[],java.util.function.IntToDoubleFunction,int)"},{"p":"dk.alexandra.fresco.stat.regression.logistic","c":"LogisticRegressionGD","l":"LogisticRegressionGD(Matrix<DRes<SFixed>>, List<DRes<SFixed>>, double, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.List,double,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.regression.logistic","c":"LogisticRegressionPrediction","l":"LogisticRegressionPrediction(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"map(Function<T, S>)","url":"map(java.util.function.Function)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MatrixUtils","l":"map(Matrix<F>, Function<F, E>)","url":"map(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.function.Function)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MatrixUtils","l":"MatrixUtils()","url":"%3Cinit%3E()"},{"p":"dk.alexandra.fresco.stat.utils","c":"MaxList","l":"MaxList(List<DRes<SInt>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MaxPair","l":"MaxPair(DRes<SInt>, DRes<SInt>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.DRes,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"MLP","l":"MLP(List<Layer>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"moorePenrosePseudoInverse(Matrix<DRes<SFixed>>)","url":"moorePenrosePseudoInverse(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"moorePenrosePseudoInverse(Matrix<DRes<SFixed>>)","url":"moorePenrosePseudoInverse(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"MoorePenrosePseudoInverse","l":"MoorePenrosePseudoInverse(Matrix<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"mult(List<DRes<SInt>>, List<DRes<SInt>>, ProtocolBuilderNumeric)","url":"mult(java.util.List,java.util.List,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"MultiDimensionalArray()","url":"%3Cinit%3E()"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"MultiDimensionalHistogram","l":"MultiDimensionalHistogram(List<List<DRes<SInt>>>, Matrix<DRes<SInt>>)","url":"%3Cinit%3E(java.util.List,dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"multiDimensionalHistogramDiscrete(List<List<DRes<SInt>>>, Matrix<DRes<SInt>>)","url":"multiDimensionalHistogramDiscrete(java.util.List,dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"multiDimensionalHistogramDiscrete(List<List<DRes<SInt>>>, Matrix<DRes<SInt>>)","url":"multiDimensionalHistogramDiscrete(java.util.List,dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"negate(List<DRes<SInt>>, ProtocolBuilderNumeric)","url":"negate(java.util.List,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.anonymisation","c":"NoisyHistogram","l":"NoisyHistogram(List<DRes<SInt>>, List<DRes<SInt>>, double)","url":"%3Cinit%3E(java.util.List,java.util.List,double)"},{"p":"dk.alexandra.fresco.stat.anonymisation","c":"NoisyStats","l":"NoisyStats(List<DRes<SFixed>>, List<DRes<SFixed>>, double)","url":"%3Cinit%3E(java.util.List,java.util.List,double)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"normalizeVector(ArrayList<DRes<SFixed>>)","url":"normalizeVector(java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"normalizeVector(ArrayList<DRes<SFixed>>)","url":"normalizeVector(java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"NormalizeVector","l":"NormalizeVector(ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.utils","c":"Triple","l":"of(E, F, G)","url":"of(E,F,G)"},{"p":"dk.alexandra.fresco.stat.tests","c":"OneSampleTTest","l":"OneSampleTTest(List<DRes<SFixed>>, DRes<SFixed>)","url":"%3Cinit%3E(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"open(List<DRes<SInt>>, ProtocolBuilderNumeric)","url":"open(java.util.List,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"BackPropagationOutput","l":"out()"},{"p":"dk.alexandra.fresco.stat.mlp","c":"ForwardPropagationOutput","l":"out()"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Layer","l":"out()"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"PearsonCorrelation","l":"PearsonCorrelation(List<DRes<SFixed>>, DRes<SFixed>, List<DRes<SFixed>>, DRes<SFixed>)","url":"%3Cinit%3E(java.util.List,dk.alexandra.fresco.framework.DRes,java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultMachineLearning","l":"predict(MLP, ArrayList<DRes<SFixed>>)","url":"predict(dk.alexandra.fresco.stat.mlp.MLP,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"MachineLearning","l":"predict(MLP, ArrayList<DRes<SFixed>>)","url":"predict(dk.alexandra.fresco.stat.mlp.MLP,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.mlp","c":"Predict","l":"Predict(MLP, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.stat.mlp.MLP,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.utils","c":"RealUtils","l":"product(List<DRes<SFixed>>, ProtocolBuilderNumeric)","url":"product(java.util.List,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"project(Function<List<T>, T>)","url":"project(java.util.function.Function)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"projection(ArrayList<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"projection(java.util.ArrayList,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"projection(ArrayList<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"projection(java.util.ArrayList,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"Projection","l":"Projection(ArrayList<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.ArrayList,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"QRAlgorithm","l":"QRAlgorithm(Matrix<DRes<SFixed>>, int)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,int)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"qrDecomposition(Matrix<DRes<SFixed>>)","url":"qrDecomposition(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultLinearAlgebra","l":"qrDecomposition(Matrix<DRes<SFixed>>)","url":"qrDecomposition(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat.linearalgebra","c":"QRDecomposition","l":"QRDecomposition(Matrix<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"Ranks","l":"Ranks(List<List<DRes<SInt>>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.utils","c":"RealUtils","l":"RealUtils()","url":"%3Cinit%3E()"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"ActivationFunction","l":"RELU"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"Relu","l":"Relu(DRes<SFixed>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"ReluDerivative","l":"ReluDerivative(DRes<SFixed>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleBernoulliDistribution(double)"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleBernoulliDistribution(double)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleBernoulliDistribution","l":"SampleBernoulliDistribution(double)","url":"%3Cinit%3E(double)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleBernoulliDistribution(DRes<SFixed>)","url":"sampleBernoulliDistribution(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleBernoulliDistribution(DRes<SFixed>)","url":"sampleBernoulliDistribution(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleBernoulliDistribution","l":"SampleBernoulliDistribution(DRes<SFixed>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleCategoricalDistribution(double[])"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleCategoricalDistribution(double[])"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleCategoricalDistribution","l":"SampleCategoricalDistribution(double[])","url":"%3Cinit%3E(double[])"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleCategoricalDistribution(List<DRes<SFixed>>)","url":"sampleCategoricalDistribution(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleCategoricalDistribution(List<DRes<SFixed>>)","url":"sampleCategoricalDistribution(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleCategoricalDistribution(List<DRes<SFixed>>, boolean)","url":"sampleCategoricalDistribution(java.util.List,boolean)"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleCategoricalDistribution(List<DRes<SFixed>>, boolean)","url":"sampleCategoricalDistribution(java.util.List,boolean)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleCategoricalDistribution","l":"SampleCategoricalDistribution(List<DRes<SFixed>>, boolean)","url":"%3Cinit%3E(java.util.List,boolean)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleExponentialDistribution","l":"SampleExponentialDistribution(BigDecimal)","url":"%3Cinit%3E(java.math.BigDecimal)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleExponentialDistribution(double)"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleExponentialDistribution(double)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleExponentialDistribution","l":"SampleExponentialDistribution(double)","url":"%3Cinit%3E(double)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleExponentialDistribution(DRes<SFixed>)","url":"sampleExponentialDistribution(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleExponentialDistribution(DRes<SFixed>)","url":"sampleExponentialDistribution(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleExponentialDistribution","l":"SampleExponentialDistribution(DRes<SFixed>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleIrwinHallDistribution","l":"SampleIrwinHallDistribution(int)","url":"%3Cinit%3E(int)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleLaplaceDistribution(double)"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleLaplaceDistribution(double)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleLaplaceDistribution","l":"SampleLaplaceDistribution(double)","url":"%3Cinit%3E(double)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleLaplaceDistribution(DRes<SFixed>)","url":"sampleLaplaceDistribution(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleLaplaceDistribution(DRes<SFixed>)","url":"sampleLaplaceDistribution(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleLaplaceDistribution","l":"SampleLaplaceDistribution(DRes<SFixed>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"sampleMean(List<DRes<SFixed>>)","url":"sampleMean(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"sampleMean(List<DRes<SFixed>>)","url":"sampleMean(java.util.List)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleMean","l":"SampleMean(List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"sampleMedian(List<DRes<SFixed>>)","url":"sampleMedian(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"sampleMedian(List<DRes<SFixed>>)","url":"sampleMedian(java.util.List)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleMedian","l":"SampleMedian(List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleNormalDistribution()"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleNormalDistribution()"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleNormalDistribution","l":"SampleNormalDistribution()","url":"%3Cinit%3E()"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"samplePercentiles(List<DRes<SFixed>>, double[])","url":"samplePercentiles(java.util.List,double[])"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"samplePercentiles(List<DRes<SFixed>>, double[])","url":"samplePercentiles(java.util.List,double[])"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleQuantiles","l":"SampleQuantiles(List<DRes<SFixed>>, double[])","url":"%3Cinit%3E(java.util.List,double[])"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleRademacherDistribution()"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleRademacherDistribution()"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleRademacherDistribution","l":"SampleRademacherDistribution()","url":"%3Cinit%3E()"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"sampleStandardDeviation(List<DRes<SFixed>>)","url":"sampleStandardDeviation(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"sampleStandardDeviation(List<DRes<SFixed>>)","url":"sampleStandardDeviation(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"sampleStandardDeviation(List<DRes<SFixed>>, DRes<SFixed>)","url":"sampleStandardDeviation(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"sampleStandardDeviation(List<DRes<SFixed>>, DRes<SFixed>)","url":"sampleStandardDeviation(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleStandardDeviation","l":"SampleStandardDeviation(List<DRes<SFixed>>, DRes<SFixed>)","url":"%3Cinit%3E(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultSampler","l":"sampleUniformDistribution()"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"sampleUniformDistribution()"},{"p":"dk.alexandra.fresco.stat.sampling","c":"SampleUniformDistribution","l":"SampleUniformDistribution()","url":"%3Cinit%3E()"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"sampleVariance(List<DRes<SFixed>>)","url":"sampleVariance(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"sampleVariance(List<DRes<SFixed>>)","url":"sampleVariance(java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"sampleVariance(List<DRes<SFixed>>, DRes<SFixed>)","url":"sampleVariance(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"sampleVariance(List<DRes<SFixed>>, DRes<SFixed>)","url":"sampleVariance(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"SampleVariance","l":"SampleVariance(List<DRes<SFixed>>, DRes<SFixed>)","url":"%3Cinit%3E(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"scale(List<DRes<SFixed>>, double, ProtocolBuilderNumeric)","url":"scale(java.util.List,double,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"scale(List<DRes<SFixed>>, DRes<SFixed>, ProtocolBuilderNumeric)","url":"scale(java.util.List,dk.alexandra.fresco.framework.DRes,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"scaleInt(List<DRes<SInt>>, DRes<SInt>, ProtocolBuilderNumeric)","url":"scaleInt(java.util.List,dk.alexandra.fresco.framework.DRes,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"set(int[], T)","url":"set(int[],T)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"set(List<Integer>, T)","url":"set(java.util.List,T)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"ActivationFunction","l":"SIGMOID"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"Sigmoid","l":"Sigmoid(DRes<SFixed>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"SigmoidDerivative","l":"SigmoidDerivative(DRes<SFixed>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"simpleLinearRegression(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"simpleLinearRegression(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"simpleLinearRegression(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"simpleLinearRegression(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"SimpleLinearRegression","l":"SimpleLinearRegression(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.regression.linear","c":"SimpleLinearRegression","l":"SimpleLinearRegression(List<DRes<SFixed>>, List<DRes<SFixed>>, boolean, boolean)","url":"%3Cinit%3E(java.util.List,java.util.List,boolean,boolean)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"SP","l":"SP(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MultiDimensionalArray","l":"sparse(List<Integer>)","url":"sparse(java.util.List)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"SPD","l":"SPD(List<DRes<SFixed>>, DRes<SFixed>, List<DRes<SFixed>>, DRes<SFixed>)","url":"%3Cinit%3E(java.util.List,dk.alexandra.fresco.framework.DRes,java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"SSD","l":"SSD(List<DRes<SFixed>>, DRes<SFixed>)","url":"%3Cinit%3E(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"SSE","l":"SSE(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"sub(List<DRes<SFixed>>, List<DRes<SFixed>>, ProtocolBuilderNumeric)","url":"sub(java.util.List,java.util.List,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MatrixUtils","l":"subMatrix(Matrix<E>, int, int, int, int)","url":"subMatrix(dk.alexandra.fresco.lib.common.collections.Matrix,int,int,int,int)"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"sum(List<List<DRes<SFixed>>>, ProtocolBuilderNumeric)","url":"sum(java.util.List,dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoContinuous","l":"SurvivalInfoContinuous(List<DRes<SFixed>>, DRes<SInt>, DRes<SInt>)","url":"%3Cinit%3E(java.util.List,dk.alexandra.fresco.framework.DRes,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoDiscrete","l":"SurvivalInfoDiscrete(List<List<DRes<SInt>>>, DRes<SInt>, DRes<SInt>)","url":"%3Cinit%3E(java.util.List,dk.alexandra.fresco.framework.DRes,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoSorter","l":"SurvivalInfoSorter(List<T>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoSorterContinuous","l":"SurvivalInfoSorterContinuous(List<SurvivalInfoContinuous>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.survival","c":"SurvivalInfoSorterDiscrete","l":"SurvivalInfoSorterDiscrete(List<SurvivalInfoDiscrete>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.utils","c":"MatrixUtils","l":"transpose(Matrix<E>)","url":"transpose(dk.alexandra.fresco.lib.common.collections.Matrix)"},{"p":"dk.alexandra.fresco.stat.utils","c":"TransposedMatrixAction","l":"TransposedMatrixAction(Matrix<DRes<SFixed>>, ArrayList<DRes<SFixed>>)","url":"%3Cinit%3E(dk.alexandra.fresco.lib.common.collections.Matrix,java.util.ArrayList)"},{"p":"dk.alexandra.fresco.stat.utils","c":"Triple","l":"Triple(A, B, C)","url":"%3Cinit%3E(A,B,C)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"ttest(List<DRes<SFixed>>, DRes<SFixed>)","url":"ttest(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"ttest(List<DRes<SFixed>>, DRes<SFixed>)","url":"ttest(java.util.List,dk.alexandra.fresco.framework.DRes)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"ttest(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"ttest(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"ttest(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"ttest(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat.descriptive","c":"TwoDimensionalHistogram","l":"TwoDimensionalHistogram(Pair<List<DRes<SInt>>, List<DRes<SInt>>>, List<Pair<DRes<SInt>, DRes<SInt>>>)","url":"%3Cinit%3E(dk.alexandra.fresco.framework.util.Pair,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"twoDimensionalHistogramContinuous(Pair<List<DRes<SFixed>>, List<DRes<SFixed>>>, List<Pair<DRes<SFixed>, DRes<SFixed>>>)","url":"twoDimensionalHistogramContinuous(dk.alexandra.fresco.framework.util.Pair,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"twoDimensionalHistogramContinuous(Pair<List<DRes<SFixed>>, List<DRes<SFixed>>>, List<Pair<DRes<SFixed>, DRes<SFixed>>>)","url":"twoDimensionalHistogramContinuous(dk.alexandra.fresco.framework.util.Pair,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"DefaultStatistics","l":"twoDimensionalHistogramDiscrete(Pair<List<DRes<SInt>>, List<DRes<SInt>>>, List<Pair<DRes<SInt>, DRes<SInt>>>)","url":"twoDimensionalHistogramDiscrete(dk.alexandra.fresco.framework.util.Pair,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"twoDimensionalHistogramDiscrete(Pair<List<DRes<SInt>>, List<DRes<SInt>>>, List<Pair<DRes<SInt>, DRes<SInt>>>)","url":"twoDimensionalHistogramDiscrete(dk.alexandra.fresco.framework.util.Pair,java.util.List)"},{"p":"dk.alexandra.fresco.stat.tests","c":"TwoSampleTTest","l":"TwoSampleTTest(List<DRes<SFixed>>, List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"dk.alexandra.fresco.stat","c":"AdvancedLinearAlgebra","l":"using(ProtocolBuilderNumeric)","url":"using(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat","c":"MachineLearning","l":"using(ProtocolBuilderNumeric)","url":"using(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat","c":"Sampler","l":"using(ProtocolBuilderNumeric)","url":"using(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat","c":"Statistics","l":"using(ProtocolBuilderNumeric)","url":"using(dk.alexandra.fresco.framework.builder.numeric.ProtocolBuilderNumeric)"},{"p":"dk.alexandra.fresco.stat.descriptive.helpers","c":"USS","l":"USS(List<DRes<SFixed>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"ActivationFunction","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dk.alexandra.fresco.stat.mlp.activationfunction","c":"ActivationFunction","l":"values()"},{"p":"dk.alexandra.fresco.stat.utils","c":"VectorUtils","l":"VectorUtils()","url":"%3Cinit%3E()"},{"p":"dk.alexandra.fresco.stat.utils","c":"MaxList","l":"withSFixed(List<DRes<SFixed>>)","url":"withSFixed(java.util.List)"}]